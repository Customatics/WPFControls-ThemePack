<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinWidth" Value="{DynamicResource ButtonMinWidth}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Margin" Value="{DynamicResource SpaceOuter}"/>
        <Setter Property="Padding" Value="{DynamicResource SpaceInner}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    
    <Style x:Key="Button.Solid" TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinWidth" Value="{DynamicResource ButtonMinWidth}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Margin" Value="{DynamicResource SpaceOuter}"/>
        <Setter Property="Padding" Value="{DynamicResource SpaceInner}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Margin="{TemplateBinding Margin}" MinWidth="{TemplateBinding MinWidth}">
                        <TextBlock Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" Padding="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" TextDecorations="{TemplateBinding TextBlock.TextDecorations}">
                            <ContentPresenter ContentSource="Content"/>
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentedColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource HoverColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressColor}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button.Ghost" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Solid}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinWidth" Value="{DynamicResource ButtonMinWidth}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentedColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource AccentedColor}"/>
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource HoverColor}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Active}" Opacity="0.10"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource PressColor}"/>
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Button.Borderless" TargetType="{x:Type Button}" BasedOn="{StaticResource Button.Ghost}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="TextBlock.TextDecorations" Value="Underline"/>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ActiveColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource HoverColor}"/>
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource PressColor}"/>
                <Setter Property="Background" Value="{x:Null}"/>
            </Trigger>
            
        </Style.Triggers>
    </Style>

</ResourceDictionary>
