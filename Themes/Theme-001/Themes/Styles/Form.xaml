<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vc="clr-namespace:ThemePack.Common.Converters;assembly=ThemePack.Common"
    xmlns:c="clr-namespace:ThemePack.Common.AttachedProperties;assembly=ThemePack.Common">

    <Style TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource TintColor}"/>
        <Setter Property="Height" Value="1"/>
    </Style>

    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TintColor}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderSize}"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="MinWidth" Value="200"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="6" Color="{DynamicResource Tint}" Opacity="0.1" Direction="-90" ShadowDepth="2" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Padding="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource CaptionTextBlockStyle}">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" />
                            </TextBlock>

                            <Separator Grid.Row="1"/>

                            <!--<ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" Padding="{TemplateBinding Padding}">-->
                            <Grid Grid.Row="2">
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <!--</ScrollViewer>-->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="TextBox.CaretBrush" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Padding" Value="{StaticResource SpaceInner}"/>
        <Setter Property="Margin" Value="{StaticResource SpaceOuter}"/>
        <Setter Property="FontSize" Value="{StaticResource BodyTextSize}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderSize}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="MinWidth" Value="{DynamicResource ControlMinWidth}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Border Name="Border" CornerRadius="0" Padding="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ScrollViewer Margin="0" Padding="{TemplateBinding Padding}" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Hover}" Opacity="{DynamicResource DisabledOpacity}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Press}" Opacity="{DynamicResource DisabledOpacity}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}"/>
            </Trigger>
            <!-- https://msdn.microsoft.com/en-us/library/cc645061%28v=vs.95%29.aspx?f=255&MSPPError=-2147217396 -->
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordBox.CaretBrush" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Padding" Value="{StaticResource SpaceInner}"/>
        <Setter Property="Margin" Value="{StaticResource SpaceOuter}"/>
        <Setter Property="FontSize" Value="{StaticResource BodyTextSize}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderSize}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="MinWidth" Value="{DynamicResource ControlMinWidth}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Border" CornerRadius="0" Padding="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ScrollViewer Margin="0" Padding="{TemplateBinding Padding}" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Hover}" Opacity="{DynamicResource DisabledOpacity}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Press}" Opacity="{DynamicResource DisabledOpacity}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="RichTextBox.CaretBrush" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Padding" Value="{StaticResource SpaceInner}"/>
        <Setter Property="Margin" Value="{StaticResource SpaceOuter}"/>
        <Setter Property="FontSize" Value="{StaticResource BodyTextSize}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderSize}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="MinWidth" Value="{DynamicResource ControlMinWidth}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border Name="Border" CornerRadius="0" Padding="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" >
                        <ScrollViewer Margin="0" Padding="{TemplateBinding Padding}" x:Name="PART_ContentHost"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style x:Key="{x:Type FlowDocument}" TargetType="{x:Type FlowDocument}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
            </Style>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Hover}" Opacity="{DynamicResource DisabledOpacity}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Press}" Opacity="{DynamicResource DisabledOpacity}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="border" BorderThickness="{StaticResource BorderSize}" Background="{DynamicResource PrimaryColor}" BorderBrush="{DynamicResource ActiveColor}" HorizontalAlignment="Left" Margin="0,0,6,0" VerticalAlignment="Center">
                            <Path x:Name="checkmark" StrokeThickness="2" Width="17" Height="17" StrokeLineJoin="Round" Stroke="{DynamicResource ActiveColor}"/>
                        </Border>
                        <ContentPresenter x:Name="content" VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                                    <Setter Property="Margin" Value="0,-2,0,0"/>
                                    <Setter Property="Padding" Value="0"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkmark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkmark" Property="Data" Value="M3,9.5L6.5,13L13.5,5"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="checkmark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="checkmark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkmark" Property="Data" Value="M3,9 L14,9"/>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Active}" Opacity="{DynamicResource DisabledOpacity}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkmark" Property="Stroke" Value="{DynamicResource HoverColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Hover}" Opacity="{DynamicResource DisabledOpacity}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="checkmark" Property="Stroke" Value="{DynamicResource PressColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Press}" Opacity="{DynamicResource DisabledOpacity}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <StackPanel Orientation="Horizontal">
                        <Border x:Name="border" BorderThickness="{StaticResource BorderSize}" CornerRadius="17" Background="{DynamicResource PrimaryColor}" BorderBrush="{DynamicResource ActiveColor}" HorizontalAlignment="Left" Margin="0,0,6,0" VerticalAlignment="Center">
                            <Path x:Name="checkmark" Width="17" Height="17" Fill="{DynamicResource ActiveColor}"/>
                        </Border>
                        <ContentPresenter x:Name="content" VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                                    <Setter Property="Margin" Value="0,-2,0,0"/>
                                    <Setter Property="Padding" Value="0"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="checkmark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="checkmark" Property="Data" Value="M13,8.5C13,10.9852813742386,10.9852813742386,13,8.5,13C6.01471862576143,13,4,10.9852813742386,4,8.5C4,6.01471862576143,6.01471862576143,4,8.5,4C10.9852813742386,4,13,6.01471862576143,13,8.5z"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="checkmark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="checkmark" Property="Fill" Value="{DynamicResource HoverColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Hover}" Opacity="{DynamicResource DisabledOpacity}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="checkmark" Property="Fill" Value="{DynamicResource PressColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                            <Setter TargetName="border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Press}" Opacity="{DynamicResource DisabledOpacity}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- slider parts -->

    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="21" />
        <Setter Property="Width" Value="21" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse Fill="{DynamicResource PrimaryColor}"/>
                        <Ellipse x:Name="Ellipse" StrokeThickness="2" Fill="{DynamicResource PrimaryColor}" Stroke="{DynamicResource ActiveColor}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{DynamicResource HoverColor}"/>
                            <Setter TargetName="Ellipse" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Hover}" Opacity="{DynamicResource DisabledOpacity}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter TargetName="Ellipse" Property="Stroke" Value="{DynamicResource PrimaryColor}"/>
                            <Setter TargetName="Ellipse" Property="Fill">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource Press}"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Template when the orientation of the Slider is Horizontal.-->
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Top" Height="4" Visibility="Collapsed" Fill="{DynamicResource TintColor}"/>
            <Border x:Name="TrackBackground" Margin="0,1,0,0" CornerRadius="2" Height="2" Grid.Row="1" BorderThickness="0" Background="{DynamicResource ActiveColor}" VerticalAlignment="Center">
                <Canvas>
                    <Canvas.Style>
                        <Style TargetType="Canvas">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelectionRangeEnabled, RelativeSource={RelativeSource AncestorType=Slider}, Mode=OneWay}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource Primary}" Opacity="0.7"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>
                    <Rectangle x:Name="PART_SelectionRange" Height="{Binding ElementName=TrackBackground, Path=ActualHeight}" Fill="{DynamicResource ActiveColor}"/>
                </Canvas>
            </Border>
            <Track Grid.Row="1" x:Name="PART_Track" VerticalAlignment="Center">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick" SnapsToDevicePixels="True" Grid.Row="2" Placement="Bottom" Height="4" Visibility="Collapsed" Fill="{DynamicResource TintColor}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--Template when the orientation of the Slider is Vertical.-->
    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick" SnapsToDevicePixels="True" Placement="Left" Width="4" Visibility="Collapsed" Fill="{DynamicResource TintColor}"/>

            <Border x:Name="TrackBackground" Margin="1,0,0,0" CornerRadius="2" Width="2" Grid.Column="1" BorderThickness="0" Background="{DynamicResource ActiveColor}" HorizontalAlignment="Center">
                <Canvas>
                    <Canvas.Style>
                        <Style TargetType="Canvas">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelectionRangeEnabled, RelativeSource={RelativeSource AncestorType=Slider}, Mode=OneWay}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="{DynamicResource Primary}" Opacity="0.7"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Canvas.Style>
                    <Rectangle x:Name="PART_SelectionRange" Width="{Binding ElementName=TrackBackground, Path=ActualWidth}" Fill="{DynamicResource ActiveColor}"/>
                </Canvas>
            </Border>
            <Track Grid.Column="1" x:Name="PART_Track" HorizontalAlignment="Center">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderButtonStyle}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar x:Name="BottomTick" SnapsToDevicePixels="True" Grid.Column="2" Placement="Right" Width="4" Visibility="Collapsed" Fill="{DynamicResource TintColor}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <!--<Setter Property="OverridesDefaultStyle" Value="true" />-->
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{DynamicResource DisabledOpacity}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TODO: if sliderThumb not in range - change color for tooltip... -->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderSize}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TintColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="FontSize" Value="{StaticResource NoteTextSize}"/>
        <Setter Property="Padding" Value="5,3"/>
        <Setter Property="ToolTipService.Placement" Value="Bottom"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="100"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
        <Setter Property="VerticalOffset" Value="-5"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{TemplateBinding Content}"  >
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="MaxWidth" Value="300"/>
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FontSize" Value="{StaticResource BodyTextSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="templateRoot" Width="{TemplateBinding Width}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>

                        <Popup AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" x:Name="PART_Popup" Placement="Bottom" PopupAnimation="Slide">
                            <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource PrimaryColor}" BorderBrush="{DynamicResource ActiveColor}" BorderThickness="2,0,2,2" CornerRadius="0" />
                                <ScrollViewer Margin="3,1,3,3" SnapsToDevicePixels="True">
                                    <StackPanel KeyboardNavigation.DirectionalNavigation="Contained" IsItemsHost="True" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                        <Border Grid.ColumnSpan="2" BorderThickness="{StaticResource BorderSize}" BorderBrush="{DynamicResource ActiveColor}" Background="{DynamicResource PrimaryColor}"/>

                        <ToggleButton x:Name="ToggleButton" Grid.Column="1" BorderThickness="0"
                                      c:IconAttachedProperty.FontIcon="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=(c:IconAttachedProperty.FontIcon), Mode=OneWay}" 
                                      c:IconAttachedProperty.IconAlignment="Right"
                                      Margin="0" ClickMode="Press" Focusable="false"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      BorderBrush="Transparent">
                            <ToggleButton.Style>
                                <Style BasedOn="{StaticResource ToggleButton.Solid}" TargetType="ToggleButton">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="1"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ContentPresenter Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            HorizontalAlignment="Stretch" IsHitTestVisible="False" x:Name="contentPresenter"
                            VerticalAlignment="Center">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="Padding" Value="{StaticResource SpaceInner}"/>
                                    <Setter Property="TextWrapping" Value="NoWrap"/>
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>

                        <TextBox x:Name="PART_EditableTextBox" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled"
                                     TextWrapping="NoWrap" Margin="0" Visibility="Hidden"
                                     Focusable="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsReadOnly="{TemplateBinding IsReadOnly}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="False">
                            <Setter TargetName="ToggleButton" Property="Grid.Column" Value="0"/>
                            <Setter TargetName="ToggleButton" Property="Grid.ColumnSpan" Value="2"/>
                            <Setter TargetName="ToggleButton" Property="HorizontalContentAlignment" Value="Right"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ToggleButton" Property="c:IconAttachedProperty.IconAlignment" Value="Center"/>
                            <Setter TargetName="ToggleButton" Property="MinWidth" Value="30"/>
                            <Setter TargetName="ToggleButton" Property="Padding" Value="0"/>
                            <Setter TargetName="ToggleButton" Property="HorizontalContentAlignment" Value="Center"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="BorderThickness" Value="{StaticResource BorderSize}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1">
                        <ScrollViewer>
                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryColor}"/>
        <Setter Property="FontSize" Value="{StaticResource BodyTextSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextBlockStyle}">
                            <Setter Property="TextWrapping" Value="NoWrap"/>
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="border" Padding="{StaticResource SpaceInner}">
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PressColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PressColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverColor}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource HoverColor}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListBox}}"/>
    <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}"/>

</ResourceDictionary>
