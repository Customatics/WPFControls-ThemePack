<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:dxp="http://schemas.devexpress.com/winfx/2008/xaml/printing"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:common="clr-namespace:ThemePack.Common.AttachedProperties;assembly=ThemePack.Common">
    <sys:Int32 x:Key="TypingDelay">350</sys:Int32>

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!-- -->

    <!-- used for settings/save -->

    <!-- used for images hover -->

    <!-- Global Color Definitions -->

    <SolidColorBrush x:Key="White.Fill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="Black.Fill" Color="#FF000000"/>

    <SolidColorBrush x:Key="Black.Alpha80.Fill" Color="#CC000000"/>
    <SolidColorBrush x:Key="Gray.Alpha40.Fill" Color="#66505050"/>

    <!-- 50 shades of Gray :) -->
    <SolidColorBrush x:Key="Gray0.Fill" Color="#FF1b1b1b"/>
    <SolidColorBrush x:Key="Gray1.Fill" Color="#FF404040"/>
    <SolidColorBrush x:Key="Gray2.Fill" Color="#FF444444"/>
    <SolidColorBrush x:Key="Gray3.Fill" Color="#FF7d7c7b"/>
    <SolidColorBrush x:Key="Gray4.Fill" Color="#FF767676"/>
    <SolidColorBrush x:Key="Gray5.Fill" Color="#FFb3b3b3"/>
    <SolidColorBrush x:Key="Gray6.Fill" Color="#FFdddddd"/>
    <SolidColorBrush x:Key="Gray7.Fill" Color="#FFe5e5e5"/>
    <SolidColorBrush x:Key="Gray8.Fill" Color="#FFe8e8e8"/>
    <SolidColorBrush x:Key="Gray9.Fill" Color="#FFf2f2f2"/>
    <SolidColorBrush x:Key="Gray10.Fill" Color="#FFf7f7f7"/>
    <SolidColorBrush x:Key="Gray11.Fill" Color="#FFf9f9f9"/>
    <SolidColorBrush x:Key="Gray12.Fill" Color="#FF1c1c1c"/>

    <SolidColorBrush x:Key="Gray.Form.InputBorders" Color="#FF999999"/>
    <SolidColorBrush x:Key="Gray.Form.ButtonBg" Color="#FFCCCCCC"/>

    <SolidColorBrush x:Key="Gray.BuildingBlock.Items" Color="#FF9C9C9C"/>
    <SolidColorBrush x:Key="Gray.BuildingBlock.Input.Active" Color="#FF0078D6"/>
    <SolidColorBrush x:Key="Gray.BuildingBlock.Input.Error" Color="#FFE93700"/>
    <SolidColorBrush x:Key="Gray.BuildingBlock.Input.Disabled" Color="#FFCCCCCC"/>

    <!-- Next 4 strings are prefined in case of branding app-->
    <SolidColorBrush x:Key="RearMenu.Bg.Fill" Color="#FF1b1b1b"/>
    <SolidColorBrush x:Key="RearMenu.Bg.Active.Fill" Color="#FF000000"/>

    <SolidColorBrush x:Key="RearMenu.Foreground.Fill" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="RearMenu.Foreground.Active.Fill" Color="#FFFFFFFF"/>

    <!-- Tabs colors -->
    <SolidColorBrush x:Key="Tab.Blue.Bg1.Fill" Color="#FF0e4b7d"/>
    <SolidColorBrush x:Key="Tab.Blue.Bg2.Fill" Color="#FF025ba0"/>
    <SolidColorBrush x:Key="Tab.Blue.Bg3.Fill" Color="#FF1566ad "/>
    <SolidColorBrush x:Key="Tab.Blue.Bg4.Fill" Color="#FF2878bf "/>
    <SolidColorBrush x:Key="StatusBar.Bg.Fill" Color="#FF0378d7"/>
    <SolidColorBrush x:Key="FormLabel.Link.Color" Color="#FF1f88db" />
    <SolidColorBrush x:Key="BuildingBlock.Link.Color" Color="#FF0078D6" />

    <!-- Execution/Value Flow -->
    <SolidColorBrush x:Key="Execution.Connector.Color" Color="#00AA55"/>
    <SolidColorBrush x:Key="Value.Connector.Color" Color="#FF0378d7" />

    <!-- Test States -->
    <SolidColorBrush x:Key="State.Start.Fill" Color="#00AA55" />
    <SolidColorBrush x:Key="State.Done.Fill" Color="#FFffbb00"/>
    <SolidColorBrush x:Key="State.Passed.Fill" Color="#FF5cb477"/>
    <!-- also used for run button -->
    <!--<SolidColorBrush x:Key="State.PassedLight.Fill" Color="#FFbbdfc6"/>-->
    <SolidColorBrush x:Key="State.Failed.Fill" Color="#FFe93b00"/>
    <!--<SolidColorBrush x:Key="State.FailedLight.Fill" Color="#FFf2c7b8"/>-->

    <SolidColorBrush x:Key="LightBlue.Fill" Color="#FFe0f1ff"/>
    <SolidColorBrush x:Key="LightBlue.Active.Fill" Color="#FFCDE8FF"/>

    <SolidColorBrush x:Key="Folder.Icon.Border" Color="#FFEFCD4B"/>
    <SolidColorBrush x:Key="Folder.Icon.Fill" Color="#FFFFE791"/>

    <!-- building blocks menu colors -->

    <SolidColorBrush x:Key="Menu.BuildingBlocks.Mouse.Bg" Color="#FFE300BC"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Find.Bg" Color="#FF018574"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.StartAndStop.Bg" Color="#FF8E8CD8"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Logic.Bg" Color="#FF00B7C3"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Variables.Bg" Color="#FF847246"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Keyboard.Bg" Color="#FF6738AC"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Generators.Bg" Color="#FF0663B2"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.External.Bg" Color="#FF7A7574"/>

    <SolidColorBrush x:Key="Menu.BuildingBlocks.SetValue.Bg" Color="#FF0663b1"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.ChangeValue.Bg" Color="#FFfd5f00"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Debugging.Bg" Color="#FF538135"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Custom.Bg" Color="#FF8d8bd4"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Group.Bg" Color="#FF7a7574"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.DataDriven.Bg" Color="#FF557AA6"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Io.Bg" Color="#FF85A655"/>
    <SolidColorBrush x:Key="Menu.BuildingBlocks.Web.Bg" Color="#FFC55A11"/>

    <SolidColorBrush x:Key="BuildingBlocks.Block.Mouse.Bg" Color="#FFB51786"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Find.Bg" Color="#FF018574"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.StartAndStop.Bg" Color="#FF8E8CD8"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Logic.Bg" Color="#FF00B7C3"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Variables.Bg" Color="#FF847246"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Keyboard.Bg" Color="#FF6738AC"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Generators.Bg" Color="#FF0663B2"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.External.Bg" Color="#FF7A7574"/>

    <SolidColorBrush x:Key="BuildingBlocks.Block.SetValue.Bg" Color="#FF0663b1"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.ChangeValue.Bg" Color="#FFfd5f00"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Debugging.Bg" Color="#FF538135"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Custom.Bg" Color="#FF8d8bd4"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Group.Bg" Color="#FF7a7574"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.DataDriven.Bg" Color="#FF557AA6"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Io.Bg" Color="#FF85A655"/>
    <SolidColorBrush x:Key="BuildingBlocks.Block.Web.Bg" Color="#FFC55A11"/>

    <SolidColorBrush x:Key="BuildingBlocks.SelectedOrange" Color="#FFFF9900"/>

    <SolidColorBrush x:Key="BuildingBlockCategoryText" Color="#9F4DBE" />
    <SolidColorBrush x:Key="BuildingBlockCategoryMouse" Color="#5588FF" />
    <SolidColorBrush x:Key="BuildingBlockCategoryStart" Color="#00AA55" />

    <SolidColorBrush x:Key="BuildingBlockAdvancedSectionBackground" Color="#FFDCDCDC" />

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Mouse.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M14.3,16.9L11.4,18 10.1,14.6 7.7,16.7 7.7,4 16.3,14 12.9,13.8 14.3,16.9z M8.6,6.5L8.6,14.6 10.5,13 11.9,16.8 13.1,16.4 11.4,12.8 14.1,12.9z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Mouse.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Find.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M4.3,9.2C4.3,6.3 6.6,4 9.5,4 12.4,4 14.7,6.3 14.7,9.2 14.7,12.1 12.4,14.4 9.5,14.4 6.6,14.4 4.3,12.1 4.3,9.2z M16.6,18L12.9,14.3 13.6,13.6 17.3,17.3 16.6,18z M9.5,5C7.2,5 5.3,6.9 5.3,9.2 5.3,11.5 7.2,13.4 9.5,13.4 11.8,13.4 13.7,11.5 13.7,9.2 13.7,6.9 11.8,5 9.5,5z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Find.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.StartAndStop.Icon">
        <Setter Property="Data" Value="M6.4,7.2L6.4,14.8 11.8,11z M0,0L0,22 22,22 22,0 0,0z M5.7,16.3L5.7,5.7 13.2,11 5.7,16.3z M16.3,16L15.5,16 15.5,5.9 16.3,5.9 16.3,16z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.StartAndStop.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Logic.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M4,6.3L6.2,6.3 6.2,4 7.5,4 7.5,6.3 9.7,6.3 9.7,7.6 7.5,7.6 7.5,9.8 6.2,9.8 6.2,7.6 4,7.6 4,6.3z M4.1,17L16.7,4.4 17.6,5.3 5,17.9 4.1,17z M18,16.9L12.6,16.9 12.6,15.6 18,15.6 18,16.9z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Logic.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Variables.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M9.2,16.1L4,11.1 9.1,6 9.8,6.7 5.4,11 9.8,15.3 9.2,16.1z M12.8,16L12.1,15.3 16.5,11 12.1,6.7 12.8,6 18,11 12.8,16z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Variables.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Keyboard.Icon">
        <Setter Property="Data" Value="M9.5,11.9L11.8,11.9 10.7,9.1z M14.9,5L7.1,5C6,5,5,6,5,7.1L5,14.9C5,16,6,17,7.1,17L14.9,17C16,17,17,16,17,14.9L17,7.1C17,6,16,5,14.9,5z M14.6,14.5L11.9,14.5 11.9,14.3C12.2,14.3 12.4,14.2 12.4,14.2 12.5,14.1 12.5,14 12.5,13.9 12.5,13.8 12.4,13.5 12.3,13.2L11.9,12.2 9.4,12.2 8.9,13.3C8.8,13.6 8.7,13.8 8.7,13.9 8.7,14 8.7,14.1 8.8,14.2 8.9,14.3 9.1,14.3 9.4,14.4L9.4,14.6 7.4,14.6 7.4,14.4C7.7,14.3 7.9,14.3 8,14.2 8.2,14 8.4,13.7 8.6,13.2L11,7.6 11.2,7.6 13.6,13.3C13.8,13.8 14,14 14.1,14.2 14.3,14.3 14.5,14.4 14.7,14.4L14.7,14.5z M0,0L0,22 22,22 22,0 0,0z M18,14.9C18,16.6,16.6,18,14.9,18L7.1,18C5.4,18,4,16.6,4,14.9L4,7.1C4,5.4,5.4,4,7.1,4L14.9,4C16.6,4,18,5.4,18,7.1L18,14.9z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Keyboard.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Generators.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M13.1,18L8.9,18 8.9,16.9 13,16.9 13,18z M13.1,16.5L8.9,16.5 8.9,15.4 13,15.4 13,16.5z M14.1,12C13.9,12.2 13.8,12.3 13.7,12.4 13.5,12.6 13.5,12.9 13.5,13.3 13.5,13.8 13.4,14.7 12.4,14.8 12.3,14.8 12.2,14.8 11.7,14.8 11.4,14.8 11,14.8 10.3,14.8L10,14.8C8.8,14.8 8.7,13.9 8.7,13.4 8.7,13 8.6,12.7 8.4,12.6L8.1,12.3C7.3,11.5 6,10.3 6,9 6,6.3 8.2,4 11,4 13.7,4 16,6.2 16,9 16,10.2 14.9,11.2 14.1,12z M11,5.1C8.9,5.1 7.1,6.8 7.1,9 7.1,9.9 8.1,10.8 8.9,11.5L9.2,11.8C9.7,12.3 9.8,12.9 9.8,13.3 9.8,13.4 9.8,13.7 9.9,13.7 9.9,13.7 9.9,13.7 9.9,13.7 9.9,13.7 10,13.7 10,13.7L10.3,13.7C10.9,13.7 12.1,13.7 12.2,13.7 12.2,13.7 12.2,13.4 12.2,13.2 12.2,12.7 12.3,12.1 12.7,11.6 12.8,11.5 13,11.3 13.2,11.1 13.9,10.4 14.7,9.6 14.7,8.9 14.9,6.8 13.1,5.1 11,5.1z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Generators.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.External.Icon">
        <Setter Property="Data" Value="M12.9,12.9L16.9,12.9 16.9,16.9 12.9,16.9z M0,0L0,22 22,22 22,0 0,0z M10.4,16.7L4,16.7 4,4 16.7,4 16.7,10.4 15.6,10.4 15.6,5.1 5.1,5.1 5.1,15.5 10.3,15.5 10.3,16.7z M18,18L11.7,18 11.7,11.7 18,11.7 18,18z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.External.Bg}"/>
    </Style>


    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.SetValue.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M7,9L15,9 15,10 7,10 7,9z M7,12L15,12 15,13 7,13 7,12z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.SetValue.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.ChangeValue.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M5,4L13,4 13,5 6,5 6,17 16,17 16,12 17,12 17,18 5,18 5,4z M15.251953,4.2382812L15.628906,4.5859375 18.818359,7.5175781 12.791016,15 9,15 9,11.417969 15.251953,4.2382812z M15.332031,5.6679688L10.191406,11.574219 12.501953,13.765625 17.453125,7.6191406 16.779297,7 13.810547,10.333984 13.064453,9.6679688 16.042969,6.3242188 15.332031,5.6679688z M10,12.769531L10,14 11.296875,14 10,12.769531z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.ChangeValue.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Debugging.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M9.7285156,5.0742188L10.386719,5.7148438 6.5625,9.6347656 4,7.0585938 4.71875,6.3359375 6.5546875,8.1816406 9.7285156,5.0742188z M12,7L18,7 18,8 12,8 12,7.3378906 12,7z M5.2421875,11.6875L7.3457031,13.691406 9.3320312,11.695312 10.048828,12.417969 8.0839844,14.394531 10.039062,16.257812 9.3398438,17 7.3652344,15.117188 5.5019531,16.990234 4.7832031,16.267578 6.6269531,14.412109 4.5429688,12.427734 5.2421875,11.6875z M12,13L18,13 18,14 12,14 12,13.470703 12,13z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Debugging.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Custom.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M11,5L19,5 19,12.236328 19,16.5 19,17 11,17 11,13.027344 9,11.091797 9,14.5 9,15 3,15 3,7 9,7 9,9.6992188 11,11.636719 11,5z M12,6L12,7 18,7 18,6 12,6z M4,8L4,14 8,14 8,8 4,8z M12,8L12,16 18,16 18,12.236328 18,8 12,8z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Custom.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Group.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Group.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.DataDriven.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0 0,0z M10.996094,6.9921875A2.9967965,0.99417371,0,0,1,13.992188,7.9882812A2.9967965,0.99417371,0,0,1,13.988281,8.015625L13.988281,8.9824219 13.982422,8.9824219A2.9967965,0.96504235,0,0,1,13.988281,9.0175781A2.9967965,0.96504235,0,0,1,10.990234,9.9824219A2.9967965,0.96504235,0,0,1,7.9941406,9.0175781A2.9967965,0.96504235,0,0,1,7.9980469,8.9824219L7.9941406,8.9824219 7.9941406,7.9824219 7.9960938,7.9824219A2.9967965,0.96504235,0,0,0,7.9980469,7.9882812A2.9967965,0.99417371,0,0,1,10.996094,6.9921875z M3.9941406,7L4.9941406,7 5.9941406,8.0039062 4.9902344,9 3.9980469,9 4.9960938,8.0039062 3.9941406,7z M16,9L18,9 19,11.007812 17.494141,13 16.005859,13 17.501953,11.007812 16,9z M7.9960938,9.4921875L7.9980469,9.4921875A2.9967965,0.96504235,0,0,0,10.994141,10.425781A2.9967965,0.96504235,0,0,0,13.984375,9.4921875L13.990234,9.4921875 13.990234,10.492188 13.990234,10.527344 13.990234,11.492188 13.984375,11.492188A2.9967965,0.96504235,0,0,1,13.990234,11.527344A2.9967965,0.96504235,0,0,1,10.994141,12.492188A2.9967965,0.96504235,0,0,1,7.9960938,11.527344A2.9967965,0.96504235,0,0,1,8.0019531,11.492188L7.9960938,11.492188 7.9960938,10.527344 7.9960938,10.492188 7.9960938,9.4921875z M3.9941406,10.015625L4.9941406,10.015625 5.9941406,11.019531 4.9902344,12.015625 3.9980469,12.015625 4.9960938,11.019531 3.9941406,10.015625z M7.9980469,10.492188A2.9967965,0.96504235,0,0,0,8.0019531,10.5A2.9967965,0.96504235,0,0,1,8.0019531,10.492188L7.9980469,10.492188z M7.9960938,12L7.9980469,12A2.9967965,0.96504235,0,0,0,10.994141,12.933594A2.9967965,0.96504235,0,0,0,13.984375,12L13.990234,12 13.990234,13 13.990234,13.035156 13.990234,14 13.984375,14A2.9967965,0.96504235,0,0,1,13.990234,14.035156A2.9967965,0.96504235,0,0,1,10.994141,15A2.9967965,0.96504235,0,0,1,7.9960938,14.035156A2.9967965,0.96504235,0,0,1,8.0019531,14L7.9960938,14 7.9960938,13.035156 7.9960938,13 7.9960938,12z M3.9941406,12.984375L4.9941406,12.984375 5.9941406,13.988281 4.9902344,14.984375 3.9980469,14.984375 4.9960938,13.988281 3.9941406,12.984375z M7.9980469,13A2.9967965,0.96504235,0,0,0,8.0019531,13.007812A2.9967965,0.96504235,0,0,1,8.0019531,13L7.9980469,13z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.DataDriven.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Io.Icon">
        <Setter Property="Data" Value="M0,0L0,22 22,22 22,0z M11.008773,4L11.989792,4.0214844 9.0155892,18 7.9917472,18z M15.496842,5.7282994C16.556903,5.7282994 17.329335,6.1658729 17.815854,7.0410884 18.306332,7.9117693 18.552427,9.2298012 18.552427,10.993837 18.552427,12.81229 18.302362,14.147459 17.803974,15 17.309544,15.848007 16.541081,16.271701 15.496842,16.271701 14.436782,16.271701 13.661177,15.841068 13.170702,14.979456 12.68418,14.117845 12.441258,12.792873 12.441258,11.006163 12.441258,9.2058495 12.68815,7.8776205 13.18258,7.0205441 13.677012,6.1589328 14.448648,5.7282994 15.496842,5.7282994z M5,6L7.0224063,6 7.0224063,16 5,16z M15.496843,7.4966292C15.29339,7.4966292 15.123977,7.5710582 14.989785,7.7203593 14.857758,7.8696605 14.753067,8.0960566 14.675149,8.3984871 14.601559,8.6817763 14.551169,9.0511718 14.523031,9.5067316 14.497061,9.9622913 14.484031,10.461594 14.484031,11.005203 14.484031,11.602408 14.495331,12.10171 14.519131,12.503674 14.542941,12.905639 14.594631,13.266426 14.672549,13.584169 14.743969,13.882771 14.844319,14.110543 14.974183,14.267501 15.106211,14.424458 15.280404,14.50337 15.496842,14.50337 15.700295,14.50337 15.869708,14.42894 16.003901,14.27964 16.138093,14.130339 16.241046,13.903944 16.314636,13.601513 16.390386,13.291426 16.442081,12.927889 16.468053,12.510612 16.496183,12.089506 16.509663,11.584345 16.509663,10.994797 16.509663,10.412906 16.496193,9.9077442 16.468053,9.4789821 16.44208,9.05022 16.389953,8.6866832 16.312035,8.388081 16.236282,8.0933071 16.132028,7.8696605 16,7.7203593 15.870137,7.5710583 15.702461,7.4966292 15.496843,7.4966292z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Io.Bg}"/>
    </Style>

    <Style TargetType="Path" x:Key="Menu.BuildingBlocks.Web.Icon">
        <Setter Property="Data" Value="M8,10.5L10.5,10.5 10.5,8 8.3,8C8.2,8.7,8,9.6,8,10.5z M8.7,7L10.5,7 10.5,4.6C9.8,4.9,9.1,5.7,8.7,7z M13.7,8L11.5,8 11.5,10.5 14,10.5C14,9.6,13.8,8.7,13.7,8z M8.3,14L10.5,14 10.5,11.5 8,11.5C8,12.4,8.2,13.3,8.3,14z M11.5,4.6L11.5,7 13.3,7C12.9,5.7,12.2,4.9,11.5,4.6z M7,11.5L4,11.5C4.1,12.4,4.3,13.2,4.7,14L7.3,14C7.1,13.2,7,12.4,7,11.5z M10.5,17.4L10.5,15 8.7,15C9.1,16.3,9.8,17.1,10.5,17.4z M7.3,8L4.7,8C4.3,8.8,4.1,9.6,4,10.5L7,10.5C7,9.6,7.1,8.8,7.3,8z M5.3,15C6.2,16.4 7.7,17.4 9.3,17.8 8.6,17.2 8,16.2 7.6,15L5.3,15z M9.3,4.2C7.6,4.6,6.2,5.6,5.3,7L7.6,7C8,5.8,8.6,4.8,9.3,4.2z M12.7,4.2C13.4,4.8,14,5.8,14.4,7L16.7,7C15.8,5.6,14.4,4.6,12.7,4.2z M15,10.5L18,10.5C17.9,9.6,17.7,8.8,17.3,8L14.7,8C14.9,8.8,15,9.6,15,10.5z M0,0L0,22 22,22 22,0 0,0z M11,19C6.6,19 3,15.4 3,11 3,6.6 6.6,3 11,3 15.4,3 19,6.6 19,11 19,15.4 15.4,19 11,19z M18,10.9L18,11.2C18,11.2 18,11.1 18,11.1 18,11.1 18,10.9 18,10.9z M14,11.5L11.5,11.5 11.5,14 13.7,14C13.8,13.3,14,12.4,14,11.5z M14.7,14L17.3,14C17.7,13.2,17.9,12.4,18,11.5L15,11.5C15,12.4,14.9,13.2,14.7,14z M11.5,15L11.5,17.4C12.2,17.1,12.9,16.3,13.3,15L11.5,15z M12.7,17.8C14.3,17.4,15.8,16.4,16.7,15L14.4,15C14,16.2,13.4,17.2,12.7,17.8z" />
        <Setter Property="Width" Value="22"/>
        <Setter Property="MaxHeight" Value="22"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Fill" Value="{StaticResource Menu.BuildingBlocks.Web.Bg}"/>
    </Style>

    <!-- Icons -->

    <Style TargetType="{x:Type Path}" x:Key="Logo.LeaptestIcon">
        <Setter Property="Data" Value="M81.8,0.2C84,0.5 86.2,0.7 88.4,1 101.6,2.7 113.5,7.5 124,15.5 139.2,27 149.1,42 152.7,60.7 157.9,87.9 150.5,111.6 130.7,131 120,141.5 107,147.8 92.3,150.6 89.4,151.1 86.4,151.3 83.4,151.7 82.9,151.8 82.4,151.9 81.9,151.9 79.7,151.9 77.4,151.9 75.2,151.9 73.1,151.7 70.9,151.5 68.8,151.2 56.2,149.6 44.8,145 34.5,137.7 33.7,137.1 33,137 32,137.3 22.3,141 12.6,144.6 2.89999999999997,148.2 2.49999999999997,148.3 2.19999999999997,148.4 1.79999999999997,148.6 2.09999999999997,148.2 2.39999999999997,147.9 2.69999999999997,147.7 7.29999999999997,144.6 11.9,141.5 16.5,138.4 30.7,128.8 44.6,118.9 59.4,110.3 68.1,105.3 76.9,100.4 86.3,96.9 91.3,95.1 96.3,93.5 101.7,93.8 106.3,94.1 109.5,96.9 110,101.5 110.2,103.9 110,106.4 110,108.9 110,108.9 110.1,109 110.2,108.9 110.6,108.8 111.1,108.7 111.5,108.6 115.7,107.6 119.9,106.5 123.6,104.1 124,103.8 124.4,103.2 124.4,102.7 124.3,99.4 124.4,96.1 123.9,92.9 123,87.7 120.4,83.4 115.1,81.5 113,80.7 110.8,80.3 108.6,80.2 103.3,79.9 98.3,81.1 93.3,82.7 83.4,85.8 74.2,90.4 65.2,95.5 64.8,95.7 64.4,95.9 63.8,96.2 70.7,84 74.4,70.9 75.9,57 72.2,57.5 68.8,58.2 65.5,59.5 65.2,59.6 64.9,60.2 64.8,60.6 63.6,65.4 62.7,70.3 61.4,75 57.7,88.3 51.4,100.2 41,109.5 34.8,115.1 28,120.1 21.5,125.4 21.4,125.5 21.3,125.5 21.2,125.5 21.1,125.5 21.1,125.4 21.1,125.4 5.7,107.1 -0.1,86 4,62.4 7.4,43.2 17.1,27.7 32.6,15.8 43.3,7.6 55.3,2.7 68.7,1 70.8,0.7 73,0.5 75.1,0.3 77.4,0.2 79.6,0.2 81.8,0.2z M90.6,53.6C91.1,53.6 91.5,53.6 92,53.5 97.3,53.2 102.6,52.4 107.6,50.5 115.3,47.5 121.6,42.5 127.3,36.7 130.2,33.7 130.2,33.7 127.4,30.6 126.1,29.2 124.7,28 123.4,26.7 120.6,29.4 118.1,31.9 115.4,34.2 109.9,38.9 103.7,42.3 96.5,43.2 91.8,43.8 87,43.9 82.3,44.1 76.3,44.3 70.4,45 64.7,47.2 57.6,49.9 51.6,54.3 46.1,59.4 41.9,63.3 38,67.6 34.3,72.1 35.2,72.8 36,73.5 36.8,74.2 37.7,74.9 38.5,75.6 39.4,76.3 40.1,75.4 40.8,74.6 41.5,73.8 42.2,73 42.9,72.2 43.6,71.4 51.8,62.3 61.3,55.5 73.9,54.1 76.1,53.9 78.2,53.8 80.5,53.6 80.2,66.2 76.9,77.7 71.1,88.7 71.6,88.6 71.7,88.5 71.8,88.5 76.3,86.2 80.8,83.9 85.3,81.6 85.7,81.4 86,81 86.2,80.5 86.8,78.6 87.5,76.7 87.9,74.8 89.6,67.9 90.1,60.8 90.6,53.6z M89.8,32.7C89.8,31.1 89.9,29.4 89.8,27.8 89.6,25.8 89.2,23.9 88.9,21.9 88.7,20.8 88,20.2 86.9,20 85.8,19.8 84.7,19.5 83.6,19.4 80.3,19.1 77.1,19 74,20.5 71.1,21.9 69.6,24.8 70,28 70.4,31 72.3,33 74.5,34.8 78.1,37.6 82.2,39.3 86.5,40.7 88.2,41.3 89.7,40.1 89.8,38.3 89.8,36.3 89.8,34.5 89.8,32.7z" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Logo.LeaptestName">
        <Setter Property="Data" Value="M504,61.4C497.6,61.4 491.1,61.4 484.6,61.4 484.6,73.3 484.6,85.1 484.6,97 481.4,97 478.3,97 475.1,97 475.1,85.2 475.1,73.3 475.1,61.4 468.6,61.4 462.3,61.4 455.9,61.4 455.9,58.7 455.9,56.1 455.9,53.2 471.9,53.2 488,53.2 504,53.2 504,56 504,58.7 504,61.4z                  M388.5,53.4C388.5,56.1 388.5,58.7 388.5,61.4 388,61.4 387.6,61.4 387.1,61.4 377.5,61.4 367.9,61.4 358.3,61.4 356.3,61.4 354.2,61.7 352.3,62.1 350,62.6 349.5,63.5 349.5,65.8 349.5,67.7 349.5,69.5 349.5,71.6 362.5,71.6 375.4,71.6 388.4,71.6 388.4,74.4 388.4,77 388.4,79.7 375.5,79.7 362.6,79.7 349.6,79.7 349.6,81.9 349.5,84 349.6,86 349.7,87.2 350.8,87.9 351.8,88.1 354,88.5 356.2,88.9 358.4,88.9 367.8,89 377.2,88.9 386.6,88.9 387.1,88.9 387.6,88.9 388.3,88.9 388.3,91.6 388.3,94.3 388.3,97 387.9,97 387.5,97 387.1,97 377.4,97 367.7,97 358.1,97 354.6,97 351.1,96.6 347.9,95.3 344.4,93.9 341.6,91.9 340.5,88.1 340.2,87.1 340.2,86.1 340.1,85 340.1,78.4 340.1,71.9 340.1,65.3 340.1,61.1 342,58 345.6,56 349.1,54 353,53.2 357,53.2 367.4,53.1 377.7,53.2 388.1,53.2 388,53.3 388.2,53.3 388.5,53.4z                  M138.9,71.6C138.9,74.4 138.9,77 138.9,79.7 126,79.7 113.1,79.7 100.1,79.7 100.1,82 99.9,84.1 100.2,86.2 100.3,86.9 101.4,87.9 102.3,88.1 104.5,88.6 106.9,89 109.1,89 118.5,89.1 128,89 137.4,89 137.9,89 138.3,89 138.9,89 138.9,91.8 138.9,94.4 138.9,97.1 138.5,97.1 138.1,97.2 137.7,97.2 127.9,97.2 118.2,97.2 108.4,97.2 104.8,97.2 101.2,96.7 97.9,95.3 95.9,94.5 94.2,93.3 92.8,91.7 91.4,90.1 90.7,88.1 90.6,86 90.6,78.9 90.6,71.8 90.6,64.8 90.6,61.5 92.2,58.9 94.9,57 97.9,54.9 101.3,54 104.9,53.6 107.2,53.4 109.4,53.4 111.7,53.4 120.3,53.4 128.9,53.4 137.5,53.4 138,53.4 138.4,53.4 139,53.4 139,56.1 139,58.7 139,61.5 138.6,61.5 138.1,61.5 137.6,61.5 127.9,61.5 118.2,61.5 108.5,61.5 106.6,61.5 104.6,61.8 102.7,62.2 100.5,62.7 100,63.6 100,65.8 100,67.7 100,69.5 100,71.6 113,71.6 125.9,71.6 138.9,71.6z                  M398.1,97.1C398.1,94.4 398.1,91.8 398.1,89 398.6,89 399.1,89 399.5,89 409.3,89 419,89 428.8,89 430.8,89 432.8,88.7 434.7,88.3 436.8,87.9 437.3,86.9 437.3,84.8 437.3,81.2 436.5,80.1 432.8,79.7 430.8,79.5 428.7,79.4 426.7,79.4 421.8,79.3 416.9,79.4 411.9,79.2 408.3,79 404.9,78 401.9,75.8 399.2,73.9 397.8,71.3 397.9,67.9 397.9,66.3 397.9,64.7 398.1,63.1 398.4,59.7 400.1,57.2 403.2,55.7 405.9,54.3 408.9,53.7 411.9,53.6 422.9,53.4 433.8,53.4 444.8,53.3 444.9,53.3 445,53.3 445.1,53.4 445.1,56 445.1,58.6 445.1,61.4 444.7,61.4 444.2,61.4 443.7,61.4 434.5,61.4 425.2,61.4 416,61.4 414.1,61.4 412.2,61.7 410.3,62.1 407.9,62.7 407.4,63.5 407.4,65.9 407.4,69.4 407.8,70 411.2,70.6 413.5,71 416,71.1 418.4,71.1 422.6,71.2 426.9,71.1 431.1,71.3 434.5,71.4 437.8,72.1 440.8,73.6 444.6,75.5 446.8,78.5 446.6,83 446.5,85 446.6,87 446.2,89 445.5,92.8 442.9,95.1 439.2,95.9 436,96.6 432.6,97 429.4,97.1 419.2,97.3 408.9,97.2 398.7,97.2 398.6,97.2 398.3,97.1 398.1,97.1z                 M229.3,97.1C226,97.1 222.9,97.1 219.8,97.1 219.8,82.5 219.8,68 219.8,53.4 220.2,53.4 220.6,53.3 221,53.3 232.6,53.3 244.1,53.3 255.7,53.3 259.3,53.3 262.9,53.8 266.2,55.2 267.8,55.9 269.2,56.8 270.6,57.9 272.2,59.1 273.1,60.9 273.1,62.9 273.1,66 273.2,69.2 272.9,72.2 272.6,75.5 270.5,77.8 267.7,79.4 264.3,81.3 260.6,81.9 256.9,82 248.3,82.1 239.6,82 231,82.1 230.5,82.1 230,82.1 229.4,82.1 229.3,87.1 229.3,92 229.3,97.1z                 M229.2,73.9C229.5,73.9 229.6,74 229.8,74 238.9,74 248,74 257.1,73.9 258.5,73.9 260,73.4 261.4,72.9 262.8,72.4 263.6,71.2 263.5,69.6 263.5,68.4 263.4,67.1 263.5,65.9 263.6,64.3 262.9,63.4 261.6,62.8 259.5,61.8 257.3,61.4 255,61.4 246.8,61.4 238.5,61.4 230.3,61.4 229.9,61.4 229.5,61.4 229.2,61.4 229.2,65.7 229.2,69.7 229.2,73.9z                 M212.9,97.2C209.3,97.2 206,97.2 202.7,97.2 202.4,97.2 201.9,96.7 201.7,96.4 199.4,93.1 197.2,89.7 195,86.3 194.5,85.6 194,85.3 193.2,85.3 184.1,85.3 175,85.3 166,85.3 165.2,85.3 164.7,85.6 164.3,86.3 162.1,89.7 159.9,93.1 157.7,96.5 157.3,97.1 156.9,97.4 156.2,97.4 152.9,97.4 149.6,97.4 146.1,97.4 146.3,97 146.5,96.7 146.7,96.5 155.9,83.2 165.2,69.8 174.4,56.5 176.1,54.1 178.4,53 181.3,53.6 183.2,54 184.4,55.3 185.5,56.8 193.3,68.4 201.2,80 209,91.5 210.2,93.2 211.5,95.1 212.9,97.2z                  M170.3,77C176.5,77 182.5,77 188.6,77 185.5,72.6 182.5,68.3 179.3,63.9 176.3,68.3 173.3,72.6 170.3,77z                 M282.4,53.4C298.4,53.4 314.4,53.4 330.4,53.4 330.4,56.1 330.4,58.7 330.4,61.4 324,61.4 317.6,61.4 311.1,61.4 311.1,73.4 311.1,85.2 311.1,97.1 307.9,97.1 304.9,97.1 301.7,97.1 301.7,85.2 301.7,73.4 301.7,61.5 295.2,61.5 288.8,61.5 282.4,61.5 282.4,58.7 282.4,56.1 282.4,53.4z                 M80.4,89C80.4,91.8 80.4,94.4 80.4,97.1 80,97.1 79.6,97.1 79.2,97.1 71.6,97.1 63.9,97.1 56.3,97.1 51.9,97.1 47.4,96.9 43.2,95.4 39.5,94.2 36.6,92 35.8,87.9 35.6,86.9 35.5,85.9 35.5,84.9 35.5,74.7 35.5,64.6 35.5,54.4 35.5,54 35.5,53.7 35.6,53.3 38.7,53.3 41.8,53.3 45,53.3 45,53.8 45,54.2 45,54.7 45,64.6 45,74.5 45,84.5 45,86.6 45.6,87.6 47.6,88 50.3,88.5 53.1,88.8 55.8,88.9 63.5,89 71.2,88.9 79,88.9 79.3,89 79.8,89 80.4,89z"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Dashboard">
        <Setter Property="Data" Value="M11.5,0C5.2,0 0,5.2 0,11.6 0,13.8 0.6,15.8 1.8,18L2.7,17.5C1.6,15.6,1.1,13.8,1,12L3,12 3,11 1,11C1.1,8.5,2.1,6.2,3.7,4.5L5.1,5.9 5.8,5.2 4.5,3.7C6.2,2.1,8.5,1.1,11,1L11,3 12,3 12,1C14.5,1.1,16.8,2.1,18.5,3.7L17.1,5.1 17.8,5.8 19.2,4.4C20.8,6.1,21.8,8.4,21.9,10.9L19.9,10.9 19.9,11.9 21.9,11.9C21.8,13.7,21.3,15.5,20.2,17.4L21.1,17.9C22.3,15.7 22.9,13.6 22.9,11.5 23,5.2 17.8,0 11.5,0z M6,9C6,9 9.9,15 10.4,15.6 11,16.2 11.9,16.2 12.5,15.6 13.1,15 13.1,14.1 12.5,13.5 12,12.9 6,9 6,9z"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="18"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Projects">
        <Setter Property="Data" Value="M19,3L19,0 3,0 3,22 5,22 5,25 22,25 22,3 19,3z                 M4,21L4,1 18,1 18,3 5,3 5,21 4,21z                 M21,24L6,24 6,22 6,21 6,4 18,4 19,4 21,4 21,24z"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Environments">
        <Setter Property="Data" Value="M18,23L7,23 7,5 18,5 18,23z                 M8,22L17,22 17,6 8,6 8,22z                 M6,21.7L1,19.8 1,2 6,5.2 6,21.7z                 M2,19.1L5,20.3 5,5.7 2,3.8 2,19.1z                 M19,21.7L19,5.1 24,2 24,19.8 19,21.7z                 M20,5.7L20,20.3 23,19.1 23,3.8 20,5.7z"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="21.035"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Scheduling">
        <Setter Property="Data" Value="M23,6L23,21 2,21 2,7 5,7 5,8 7,8 7,4 5,4 5,6 1,6 1,22 24,22 24,6z                 M4.5,12L6,12 6,13.5 4.5,13.5z                 M7.5,12L9,12 9,13.5 7.5,13.5z                 M10.5,12L12,12 12,13.5 10.5,13.5z                 M13.5,12L15,12 15,13.5 13.5,13.5z                 M16.5,12L18,12 18,13.5 16.5,13.5z                 M19.5,12L21,12 21,13.5 19.5,13.5z                 M4.5,15L6,15 6,16.5 4.5,16.5z                 M7.5,15L9,15 9,16.5 7.5,16.5z                 M10.5,15L12,15 12,16.5 10.5,16.5z                 M13.5,15L15,15 15,16.5 13.5,16.5z                 M16.5,15L18,15 18,16.5 16.5,16.5z                 M19.5,15L21,15 21,16.5 19.5,16.5z                 M19,8L21,8 21,4 19,4 19,6 8,6 8,7 19,7z"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="18"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Reports">
        <!--<Setter Property="Data" Value="M6.3,17.3C7.5,17.3,8.4,16.5,8.6,15.3L13.2,14.1C13.6,14.8 14.3,15.2 15.2,15.2 16.5,15.2 17.5,14.1 17.5,12.9 17.5,12.6 17.4,12.3 17.3,12L21.3,8.3C21.5,8.4 21.7,8.4 21.9,8.4 23.2,8.4 24.2,7.3 24.2,6.1 24.2,4.9 23.3,3.7 22,3.7 20.7,3.7 19.7,4.8 19.7,6 19.7,6.7 20,7.3 20.5,7.7L16.8,11.1C16.4,10.7 15.8,10.5 15.2,10.5 13.9,10.5 12.9,11.6 12.9,12.8 12.9,12.9 12.9,13 12.9,13.1L8.6,14.2C8.3,13.2 7.4,12.5 6.3,12.5 5,12.5 4,13.6 4,14.8 4,16 5,17.3 6.3,17.3z                 M22,4.7C22.7,4.7 23.3,5.3 23.3,6 23.3,6.7 22.7,7.4 22,7.4 21.3,7.4 20.7,6.8 20.7,6.1 20.7,5.4 21.2,4.7 22,4.7z                 M15.1,11.6C15.8,11.6 16.4,12.2 16.4,12.9 16.4,13.6 15.8,14.2 15.1,14.2 14.4,14.2 13.8,13.6 13.8,12.9 13.8,12.2 14.4,11.6 15.1,11.6z                 M6.3,13.6C7,13.6 7.6,14.2 7.6,14.9 7.6,15.6 7,16.3 6.3,16.3 5.6,16.3 4.9,15.7 4.9,15 4.9,14.3 5.5,13.6 6.3,13.6z                 M2,4L1,4 1,21 24,21 24,20 2,20z"/>-->
        <!--<Setter Property="Data" Value="M6,0L6,1 4,1 3,1 3,2 1,2 0,2 0,3 0,23 0,24 17,24 17,23 17,2 14,2 14,1 11,1 11,0 6,0z M7,1L10,1 10,2 13,2 13,3 13,4 4,4 4,2 7,2 7,1z M1,3L3,3 3,4 3,5 14,5 14,4 14,3 16,3 16,23 1,23 1,3z M3,7L14,7 14,8 3,8z M3,10L14,10 14,11 3,11z M3,13L14,13 14,14 3,14z M3,16L14,16 14,17 3,17z M3,19L10.05,19 10.05,20 3,20z"/>-->
        <!--<Setter Property="Data" Value="M10,7L21,7 21,8 10,8 10,7z M10,12L21,12 21,13 10,13 10,12z M10,17L21,17 21,18 10,18 10,17z M5.5,8.9C5.4,8.9,5.3,8.8,5.2,8.8L3.7,7.3C3.5,7.1 3.5,6.9 3.7,6.7 3.9,6.5 4.1,6.5 4.3,6.7L5.5,7.9 7.7,5.7C7.9,5.5 8.1,5.5 8.3,5.7 8.5,5.9 8.5,6.1 8.3,6.3L5.8,8.7C5.7,8.8,5.6,8.9,5.5,8.9z M5.6,14.1C4.8,14.1 4.1,13.4 4.1,12.6 4.1,11.8 4.8,11.1 5.6,11.1 6.4,11.1 7.1,11.8 7.1,12.6 7.1,13.4 6.4,14.1 5.6,14.1z M5.6,11.8C5.2,11.8 4.8,12.1 4.8,12.6 4.8,13.1 5.1,13.4 5.6,13.4 6.1,13.4 6.4,13.1 6.4,12.6 6.4,12.1 6,11.8 5.6,11.8z M5.5,19C4.7,19 4,18.4 4,17.5 4,16.6 4.7,16 5.5,16 6.3,16 7,16.7 7,17.5 7,18.3 6.4,19 5.5,19z M5.5,16.8C5.1,16.8 4.7,17.1 4.7,17.6 4.7,18.1 5,18.4 5.5,18.4 6,18.4 6.3,18.1 6.3,17.6 6.3,17.1 6,16.8 5.5,16.8z"/>-->
        <Setter Property="Data" Value="M0,4L0,21 25,21 25,4 0,4z M12,9L12,12 7,12 7,9 12,9z M7,8L7,5 12,5 12,8 7,8z M12,13L12,16 7,16 7,13 12,13z M12,17L12,20 7,20 7,17 12,17z M13,17L18,17 18,20 13,20 13,17z M13,16L13,13 18,13 18,16 13,16z M13,12L13,9 18,9 18,12 13,12z M13,8L13,5 18,5 18,8 13,8z M1,5L6,5 6,8 1,8 1,5z M1,9L6,9 6,12 1,12 1,9z M1,13L6,13 6,16 1,16 1,13z M1,17L6,17 6,20 1,20 1,17z M24,20L19,20 19,17 24,17 24,20z M24,16L19,16 19,13 24,13 24,16z M24,12L19,12 19,9 24,9 24,12z M24,8L19,8 19,5 24,5 24,8z M20,6L20,7 17,7 17,6 14,6 14,7 11,7 11,6 8,6 8,7 5,7 5,6 2,6 2,7 2,7 2,7 5,7 5,7 8,7 8,7 11,7 11,7 14,7 14,7 17,7 17,7 20,7 20,7 23,7 23,7 23,7 23,6z"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="17"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Help">
        <Setter Property="Data" Value="M12.5,0.5C5.9,0.5 0.5,5.9 0.5,12.5 0.5,19.1 5.9,24.5 12.5,24.5 19.1,24.5 24.5,19.1 24.5,12.5 24.5,5.9 19.1,0.5 12.5,0.5z                 M19.8,4.3L16.6,7.5C15.5,6.6 14,6 12.5,6 11,6 9.6,6.5 8.5,7.4L5.3,4.3C7.2,2.6 9.8,1.6 12.5,1.6 15.3,1.5 17.9,2.6 19.8,4.3z                 M12.4,18.2C9.3,18.2 6.8,15.7 6.8,12.6 6.8,9.5 9.3,7 12.4,7 15.5,7 18,9.6 18,12.6 18,15.6 15.5,18.2 12.4,18.2z                 M1.5,12.5C1.5,9.6,2.6,6.9,4.5,5L7.6,8.1C6.5,9.3 5.8,10.9 5.8,12.6 5.8,14.3 6.4,15.8 7.5,16.9L4.5,19.9C2.7,18,1.5,15.4,1.5,12.5z                 M5.2,20.7L8.2,17.7C9.3,18.6 10.8,19.2 12.4,19.2 14,19.2 15.6,18.6 16.7,17.6L19.8,20.7C17.9,22.4 15.3,23.5 12.5,23.5 9.7,23.5 7.2,22.4 5.2,20.7z                 M20.5,19.9L17.4,16.8C18.4,15.7 19,14.2 19,12.6 19,10.9 18.4,9.4 17.3,8.2L20.5,5C22.3,7 23.5,9.6 23.5,12.5 23.5,15.4 22.3,18 20.5,19.9z"/>
        <Setter Property="Width" Value="23.917"/>
        <Setter Property="Height" Value="23.917"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Settings">
        <Setter Property="Data" Value="M10,1L10,4.0703125A8.8000002,8.8000002,0,0,0,8.3085938,4.7714844L6.1367188,2.5996094 2.5996094,6.1367188 4.765625,8.3027344A8.8000002,8.8000002,0,0,0,4.0683594,10L1,10 1,15 4.0703125,15A8.8000002,8.8000002,0,0,0,4.7714844,16.691406L2.5996094,18.863281 6.1367188,22.400391 8.3027344,20.234375A8.8000002,8.8000002,0,0,0,10,20.931641L10,24 15,24 15,20.929688A8.8000002,8.8000002,0,0,0,16.691406,20.228516L18.863281,22.400391 22.400391,18.863281 20.234375,16.697266A8.8000002,8.8000002,0,0,0,20.931641,15L24,15 24,10 20.929688,10A8.8000002,8.8000002,0,0,0,20.228516,8.3085938L22.400391,6.1367188 18.863281,2.5996094 16.697266,4.765625A8.8000002,8.8000002,0,0,0,15,4.0683594L15,1 10,1z M11,2L14,2 14,4.8476562A7.8000002,7.8000002,0,0,1,16.851562,6.0273438L18.863281,4.015625 20.984375,6.1367188 18.96875,8.1523438A7.8000002,7.8000002,0,0,1,20.148438,11L23,11 23,14 20.152344,14A7.8000002,7.8000002,0,0,1,18.972656,16.851562L20.984375,18.863281 18.863281,20.984375 16.847656,18.96875A7.8000002,7.8000002,0,0,1,14,20.148438L14,23 11,23 11,20.152344A7.8000002,7.8000002,0,0,1,8.1484375,18.972656L6.1367188,20.984375 4.015625,18.863281 6.03125,16.847656A7.8000002,7.8000002,0,0,1,4.8515625,14L2,14 2,11 4.8476562,11A7.8000002,7.8000002,0,0,1,6.0273438,8.1484375L4.015625,6.1367188 6.1367188,4.015625 8.1523438,6.03125A7.8000002,7.8000002,0,0,1,11,4.8515625L11,2z M12.5,7.5C9.7444986,7.5 7.5,9.7444986 7.5,12.5 7.5,15.255501 9.7444986,17.5 12.5,17.5 15.255501,17.5 17.5,15.255501 17.5,12.5 17.5,9.7444986 15.255501,7.5 12.5,7.5z M12.5,8.5C14.715061,8.5 16.5,10.284939 16.5,12.5 16.5,14.715061 14.715061,16.5 12.5,16.5 10.284939,16.5 8.5,14.715061 8.5,12.5 8.5,10.284939 10.284939,8.5 12.5,8.5z"/>
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.Settings.Small">
        <Setter Property="Data" Value="M6.2851562,0L6.2851562,2.5996094A5.6728578,5.6728578,0,0,0,5.390625,2.9648438L3.5566406,1.1308594 1.1308594,3.5566406 2.96875,5.3925781A5.6728578,5.6728578,0,0,0,2.59375,6.2851562L0,6.2851562 0,9.7148438 2.5996094,9.7148438A5.6728578,5.6728578,0,0,0,2.9648438,10.609375L1.1308594,12.443359 3.5566406,14.869141 5.3925781,13.03125A5.6728578,5.6728578,0,0,0,6.2851562,13.40625L6.2851562,16 9.7148438,16 9.7148438,13.400391A5.6728578,5.6728578,0,0,0,10.609375,13.035156L12.443359,14.869141 14.869141,12.443359 13.03125,10.607422A5.6728578,5.6728578,0,0,0,13.40625,9.7148438L16,9.7148438 16,6.2851562 13.400391,6.2851562A5.6728578,5.6728578,0,0,0,13.035156,5.390625L14.869141,3.5566406 12.443359,1.1308594 10.607422,2.96875A5.6728578,5.6728578,0,0,0,9.7148438,2.59375L9.7148438,-2.66453525910038E-15 6.2851562,-2.66453525910038E-15z M8,5.234375A2.7665111,2.7665111,0,0,1,10.765625,8A2.7665111,2.7665111,0,0,1,8,10.765625A2.7665111,2.7665111,0,0,1,5.234375,8A2.7665111,2.7665111,0,0,1,8,5.234375z"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.Icon.ExternalLink">
        <Setter Property="Data" Value="M11,4L11,1.707 6.354,6.354 5.646,5.646 10.293,1 8,1 8,0 12,0 12,4 11,4z M3,4L3,9 9,9 9,5 10,5 10,10 9,10 9,12 0,12 0,3 2,3 2,2 7,2 7,3 3,3 3,4z M2,10L2,4 1,4 1,11 8,11 8,10 2,10z"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Menu.ToggleButton.Icon">
        <Setter Property="Data" Value="M4,7L20,7 20,6 3,6 3,19 20,19 20,18 4,18z                 M17.8,15.8L21.1,12.5 17.8,9.2 17.2,9.8 19.4,12 14,12 14,13 19.4,13 17.2,15.2z"/>
    </Style>


    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.CreateNew">
        <Setter Property="Data" Value="M12,1.5L3.5,1.5 3.5,18.5 10.5,18.5 10.5,17.5 4.5,17.5 4.5,2.5 11.5,2.5 11.5,6.5 15.5,6.5 15.5,13.5 16.5,13.5 16.5,4.8 12,1.5z M15.5,5.5L12.5,5.5 12.5,3.1 15.5,5.3 15.5,5.5z M14.5,13.5L13.5,13.5 13.5,15.5 11.5,15.5 11.5,16.5 13.5,16.5 13.5,18.5 14.5,18.5 14.5,16.5 16.5,16.5 16.5,15.5 14.5,15.5z" />
        <Setter Property="Width" Value="13" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Edit">
        <!--<Setter Property="Data" Value="M13,0L0,13 0,17 4,17 17,4 13,0z M1,16L1,13.5 3.5,16 1,16z M1.5,13L13,1.5 14.5,3 10,7.5 10.5,8 15,3.5 15.5,4 4,15.5 1.5,13z" />-->
        <Setter Property="Data" Value="M5,15L1,15 1,6 5,6 5,5 0,5 0,16 5,16z M8,5L8,6 19,6 19,15 8,15 8,16 20,16 20,5z M7,3L9,3 9,2 7,2 6,2 4,2 4,3 6,3 6,18 4,18 4,19 6,19 7,19 9,19 9,18 7,18z" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Delete">
        <Setter Property="Data" Value="M13,15.5L12,15.5 12,6.5 11,6.5 11,15.5 9,15.5 9,6.5 8,6.5 8,15.5 7,15.5 7,6.5 6,6.5 6,15.5 6.5,15.5 7,15.5 8,15.5 9,15.5 11,15.5 12,15.5 13,15.5 13.5,15.5 14,15.5 14,6.5 13,6.5z M17,2.5L13,2.5 13,0.5 7,0.5 7,2.5 3,2.5 2,2.5 2,3.5 3,3.5 3,18.2C3,18.5,3.3,19.5,4,19.5L15.9,19.5C16.4,19.5,17,18.7,17,18.2L17,3.5 18,3.5 18,2.5 17,2.5z M8,1.5L12,1.5 12,2.5 8,2.5 8,1.5z M15.8,18.5L4.1,18.5C4.1,18.4,4,18.3,4,18.2L4,3.5 16,3.5 16,18.2C16,18.3,15.9,18.4,15.8,18.5z" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="19" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Filter">
        <Setter Property="Data" Value="M2,2L2,5.5 8,10 8,16 12,18 12,10 18,5.5 18,2 2,2z M17,5L11,9.5 11,16.1 9,15.1 9,9.5 3,5 3,3 17,3 17,5z" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.CheckConnection">
        <Setter Property="Data" Value="M16.1,10.63L15.39,9.93 20,5.32 15.39,0.71 16.1,0 21.41,5.32 16.1,10.63z M5.32,10.63L0,5.32 5.32,0 6.02,0.71 1.41,5.32 6.02,9.93 5.32,10.63z M11.22,5.32C11.22,5.5961423749154,10.9961423749154,5.82,10.72,5.82C10.4438576250846,5.82,10.22,5.5961423749154,10.22,5.32C10.22,5.0438576250846,10.4438576250846,4.82,10.72,4.82C10.9961423749154,4.82,11.22,5.0438576250846,11.22,5.32z M14.21,5.32C14.21,5.5961423749154,13.9861423749154,5.82,13.71,5.82C13.4338576250846,5.82,13.21,5.5961423749154,13.21,5.32C13.21,5.0438576250846,13.4338576250846,4.82,13.71,4.82C13.9861423749154,4.82,14.21,5.0438576250846,14.21,5.32z M8.22,5.32C8.22,5.5961423749154,7.9961423749154,5.82,7.72,5.82C7.4438576250846,5.82,7.22,5.5961423749154,7.22,5.32C7.22,5.0438576250846,7.4438576250846,4.82,7.72,4.82C7.9961423749154,4.82,8.22,5.0438576250846,8.22,5.32z" />
        <Setter Property="Width" Value="21.5" />
        <Setter Property="Height" Value="10.5" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.RefreshAssets">
        <Setter Property="Data" Value="M24.21,6.33L21.64,8.91A9.22,9.22,0,0,0,4.12,5.22L5.12,5.51A8.22,8.22,0,0,1,20.65,9.06L17.92,6.33 17.21,7 21.06,10.85 24.92,7z M12.31,17.47A8.34,8.34,0,0,1,4,9.23L4,9.23 6.9,12 7.66,11.29 3.84,7.48 0,11.33 0.71,12 3.2,9.56A9.22,9.22,0,0,0,20.72,13.25L19.72,12.96A8.32,8.32,0,0,1,12.31,17.47z" />
        <Setter Property="Width" Value="25" />
        <Setter Property="Height" Value="18.5" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Export">
        <Setter Property="Data" Value="M10.51,0L2,0 2,5 3,5 3,1 10,1 10,5 14,5 14,16 3,16 3,14 2,14 2,17 15,17 15,3.3z M14,4L11,4 11,1.6 14,3.81z M3.18,12.18L3.82,12.82 7.14,9.5 3.82,6.18 3.18,6.82 5.36,9 0,9 0,10 5.36,10 3.18,12.18z" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Import">
        <Setter Property="Data" Value="M11.04,12.18L11.68,12.82 15,9.5 11.68,6.18 11.04,6.82 13.22,9 7.86,9 7.86,10 13.22,10 11.04,12.18z M12,5L13,5 13,3.3 8.51,0 0,0 0,17 13,17 13,14 12,14 12,16 1,16 1,1 8,1 8,5z M9,1.6L12,3.81 12,4 9,4z" />
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="17" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.InOut">
        <Setter Property="Data" Value="M12.34,6L12.98,6.64 16.3,3.32 12.98,0 12.34,0.64 14.52,2.82 2.17,2.82 2.17,3.82 14.52,3.82 12.34,6z M3.96,6.64L3.32,6 0,9.32 3.32,12.64 3.96,12 1.78,9.82 14.14,9.82 14.14,8.82 1.78,8.82 3.96,6.64z" />
        <Setter Property="Width" Value="16.3" />
        <Setter Property="Height" Value="12.64" />
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Run">
        <Setter Property="Data" Value="M14.01,10.49L0.01,20.989 0.01,-0.01 14.01,10.49z" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Height" Value="19" />
        <Setter Property="Fill" Value="{StaticResource State.Passed.Fill}"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.TestConnection" BasedOn="{StaticResource Panel.Icon.Run}"/>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Stop">
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Data" Value="M0,0L16,0 16,16 0,16z"/>
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Revert">
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Data" Value="M12.35,0A9,9,0,0,0,3.35,9C3.35,9.1,3.35,9.2,3.35,9.31L0.71,6.65 0,7.35 3.85,11.2 7.71,7.35 7,6.65 4.37,9.28C4.37,9.19,4.37,9.09,4.37,9A8,8,0,1,1,18,14.66L18.71,15.37A9,9,0,0,0,12.35,0z"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="15" />
        <Setter Property="Stretch" Value="Uniform"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="PlayPanel.Icon.HideBar">
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Data" Value="M1.5,2.4L1.5,4.4 1.5,5.4 1.5,14.4 2.5,14.4 2.5,5.4 17.5,5.4 17.5,14.4 18.5,14.4 18.5,5.4 18.5,4.4 18.5,2.4 1.5,2.4z M2.5,4.4L2.5,3.4 17.5,3.4 17.5,4.4 2.5,4.4z M10.5,15.7L10.5,9.4 9.5,9.4 9.5,15.7 6.9,13 6.1,13.8 10,17.6 13.9,13.8 13.1,13z"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="PlayPanel.Icon.Play">
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Data" Value="M0,21.1L0,0 15,10.6 0,21.1z M1.5,3L1.5,18.2 12.3,10.6 1.5,3z"/>
        <Setter Property="Width" Value="15" />
        <Setter Property="Height" Value="21" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="PlayPanel.Icon.ReRun">
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Data" Value="M23.54,7.19L21.46,10A11,11,0,0,0,10.75,0A10.78,10.78,0,0,0,10.75,21.56A10.58,10.58,0,0,0,14.33,20.86L13.66,19A8.69,8.69,0,0,1,10.75,19.58A8.78,8.78,0,0,1,10.75,2A8.94,8.94,0,0,1,19.49,10.41L16.55,8.24 15.36,9.85 21,14 25.16,8.37z"/>
        <Setter Property="Width" Value="25.1" />
        <Setter Property="Height" Value="21.1" />
        <Setter Property="Margin" Value="0,0,-4,0"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="PlayPanel.Icon.SwitchToEdit">
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Data" Value="M493.278,154.515L470.653,177.156 334.871,41.39 357.496,18.749C382.496,-6.251,423.027,-6.251,448.027,18.749L493.277,64.015C518.246,89,518.246,129.515,493.278,154.515z M176.465,426.031C170.215,432.281 170.215,442.406 176.465,448.656 182.715,454.937 192.84,454.937 199.09,448.656L448.028,199.781 425.372,177.14 176.465,426.031z M63.309,312.906C57.059,319.156 57.059,329.281 63.309,335.531 69.559,341.781 79.684,341.781 85.934,335.531L334.871,86.64 312.246,64.015 63.309,312.906z M357.465,109.25L108.559,358.156C96.059,370.625 96.09,390.906 108.559,403.406 121.059,415.906 141.309,415.969 153.84,403.375L402.746,154.516 357.465,109.25z M153.778,471.219C146.122,463.563 142.434,453.844 141.059,443.844 137.809,444.344 134.528,444.813 131.184,444.813 114.09,444.813 98.028,438.125 85.934,426.032 73.84,413.907 67.184,397.876 67.184,380.782 67.184,377.657 67.653,374.626 68.09,371.594 57.746,370.188 48.184,365.656 40.684,358.156 39.965,357.437 39.715,356.468 39.059,355.687L-0.004,512 155.902,472.969C155.215,472.344,154.434,471.875,153.778,471.219z"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="PlayPanel.Icon.Metadata">
        <Setter Property="Fill" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Data" Value="M10.5,0L0,5.4 10.5,10.8 21,5.4 10.5,0z M10.5,8.6L4.3,5.4 10.5,2.2 16.7,5.4 10.5,8.6z M10.5,12.5L2.1,8.1 0,9.2 10.5,14.6 21,9.2 18.9,8.1z M10.5,16.3L2.1,11.9 0,13 10.5,18.4 21,13 18.9,11.9z"/>
        <Setter Property="Width" Value="28" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="TestEditor.Icon.Undo">
        <Setter Property="Fill" Value="{StaticResource White.Fill}"/>
        <Setter Property="Data" Value="M12.35,0A9,9,0,0,0,3.35,9C3.35,9.1,3.35,9.2,3.35,9.31L0.71,6.65 0,7.35 3.85,11.2 7.71,7.35 7,6.65 4.37,9.28C4.37,9.19,4.37,9.09,4.37,9A8,8,0,1,1,18,14.66L18.71,15.37A9,9,0,0,0,12.35,0z"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="TestEditor.Icon.Redo">
        <Setter Property="Fill" Value="{StaticResource White.Fill}"/>
        <Setter Property="Data" Value="M20.65,6.65L18,9.31C18,9.21,18,9.1,18,9A9,9,0,1,0,2.64,15.36L3.35,14.65A8,8,0,1,1,17,9C17,9.09,17,9.19,17,9.28L14.35,6.65 13.64,7.36 17.49,11.21 21.34,7.36z"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="TestEditor.Icon.TestSettings">
        <Setter Property="Fill" Value="{StaticResource White.Fill}"/>
        <Setter Property="Data" Value="M19,12L19,8 16.9,8C16.7,7.4,16.5,7,16.3,6.7L17.7,5.3 14.9,2.5 13.4,4C13,3.8,12.6,3.6,12,3.5L12,3 12,1 8,1 8,3 8,3.5C7.4,3.6,7,3.8,6.6,4L5.2,2.5 2.3,5.4 3.7,6.8C3.5,7,3.3,7.4,3.1,8L1,8 1,12 3,12C3.1,12.6,3.3,13,3.5,13.4L2,14.8 4.8,17.6 6.4,16.2C6.9,16.5,7.3,16.7,8,16.8L8,17 8,19 12,19 12,17 12,16.9C12.6,16.7,13.1,16.5,13.6,16.3L15.2,17.7 18,14.9 16.5,13.4C16.7,13,16.9,12.7,17,12L19,12z M16.6,14.8L15.2,16.2 13.6,15 13.3,15.2C12.8,15.5,12.3,15.8,11.4,16L11,16.1 11,17 11,18 9,18 9,17 9,16.1 8.6,16C7.6,15.8,7.2,15.5,6.7,15.2L6.4,15 4.9,16.3 3.5,14.9 4.8,13.6 4.5,13C4.2,12.5,4,12.2,3.9,11.4L3.8,11 2,11 2,9 3.9,9 4,8.6C4.1,7.9,4.3,7.6,4.6,7.2L5,6.6 3.8,5.3 5.2,3.9 6.5,5.2 7,5C7.5,4.7,7.8,4.5,8.6,4.4L9,4.3 9,4 9,3 9,2 11,2 11,3 11,4 11,4.3 11.4,4.4C12.2,4.5,12.6,4.7,13,5L13.5,5.3 14.8,4 16.2,5.4 15,6.6 15.4,7.2C15.7,7.6,15.9,7.9,16,8.6L16.1,9 18,9 18,11 16.2,11 16.1,11.4C16,12.2,15.8,12.5,15.5,13L15.2,13.5 16.6,14.8z M9.9,6.5C7.9,6.5 6.3,8.1 6.3,10.1 6.3,12.1 7.9,13.7 9.9,13.7 11.9,13.7 13.5,12.1 13.5,10.1 13.5,8.1 11.9,6.5 9.9,6.5z M9.9,12.8C8.5,12.8 7.3,11.6 7.3,10.2 7.3,8.8 8.5,7.6 9.9,7.6 11.3,7.6 12.5,8.8 12.5,10.2 12.5,11.6 11.3,12.8 9.9,12.8z"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="TestEditor.Icon.SaveTest">
        <Setter Property="Fill" Value="{StaticResource White.Fill}"/>
        <Setter Property="Data" Value="M9.5,2L9.5,10.3 6.9,7.6 6.1,8.4 10,12.2 13.9,8.4 13.1,7.6 10.5,10.3 10.5,3 17.5,3 17.5,17 2.5,17 2.5,2 1.5,2 1.5,18 18.5,18 18.5,2z"/>
        <Setter Property="Width" Value="17" />
        <Setter Property="Height" Value="16" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="Window.Icon" TargetType="Path">
        <Setter Property="Height" Value="44"/>
        <Setter Property="MaxWidth" Value="44"/>
        <Setter Property="Fill" Value="{StaticResource White.Fill}"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Data" Value="M34,6.5L34,0.5 6,0.5 6,39.5 10,39.5 10,44.5 39,44.5 39,6.5 34,6.5z M7,38.5L7,1.5 33,1.5 33,6.5 10,6.5 10,38.5 7,38.5z M38,43.5L11,43.5 11,39.5 11,38.5 11,7.5 33,7.5 34,7.5 38,7.5 38,43.5z"/>
    </Style>
    
    <Style x:Key="Tutorial.Icon" TargetType="Path">
        <Setter Property="Height" Value="26.6"/>
        <Setter Property="MaxWidth" Value="31.6"/>
        <Setter Property="Fill" Value="{StaticResource White.Fill}"/>
        <Setter Property="Stretch" Value="Uniform"/>
        <Setter Property="Data" Value="M28.59,20.63A1,1,0,0,1,27.59,21.63L3,21.63A1,1,0,0,1,2,20.63L2,4.13A1,1,0,0,1,3,3.13L22.58,3.13A5.2,5.2,0,0,1,23.3,1.13L3,1.13A3,3,0,0,0,0,4.13L0,20.63A3,3,0,0,0,3,23.63L12,23.63 12,25.63 7,25.63 7,26.63 24,26.63 24,25.63 19,25.63 19,23.63 27.59,23.63A3,3,0,0,0,30.59,20.63L30.59,8.28A5.21,5.21,0,0,1,28.59,9.04z M27.81,0A3.81,3.81,0,1,0,31.62,3.81A3.81,3.81,0,0,0,27.81,0z M27,5.32L27,2.43 29.5,3.87z M8,6.63L8,8.63 10.98,8.63 10.98,9.63 8,9.63 8,14.63 10.98,14.63 10.98,15.63 8,15.63 8,18.63 11,18.63 11,6.63 8,6.63z M12,6.63L12,8.63 14.98,8.63 14.98,9.63 12,9.63 12,14.63 14.98,14.63 14.98,15.63 12,15.63 12,18.63 15,18.63 15,6.63 12,6.63z M16,6.63L16,8.63 18.98,8.63 18.98,9.63 16,9.63 16,14.63 18.98,14.63 18.98,15.63 16,15.63 16,18.63 19,18.63 19,6.63 16,6.63z M20,6.63L20,8.63 22.98,8.63 22.98,9.63 20,9.63 20,14.63 22.98,14.63 22.98,15.63 20,15.63 20,18.63 23,18.63 23,6.63 20,6.63z"/>
    </Style>


    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Back.Small">
        <Setter Property="Data" Value="M10,0.8C4.9,0.8 0.800000000000001,4.9 0.800000000000001,10 0.800000000000001,15.1 4.9,19.2 10,19.2 15.1,19.2 19.2,15.1 19.2,10 19.2,4.9 15.1,0.8 10,0.8z M10,18.2C5.5,18.2 1.8,14.5 1.8,10 1.8,5.5 5.5,1.8 10,1.8 14.5,1.8 18.2,5.5 18.2,10 18.2,14.5 14.5,18.2 10,18.2z M9.8,6.8L9.1,6.1 5.2,10 9.1,13.9 9.8,13.2 7,10.5 13.5,10.5 13.5,9.5 7.1,9.5z"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.NewCase">
        <Setter Property="Data" Value="M17,3L17,2 3,2 3,2 3,3 3,5 3,6 3,8 3,9 3,11 3,12 3,14 3,15 3,17 3,18 3,18 11,18 11,17 3,17 3,15 11,15 11,14 3,14 3,12 17,12 17,11 3,11 3,9 17,9 17,8 3,8 3,6 17,6 17,5 3,5 3,3z M15,13L14,13 14,15 12,15 12,16 14,16 14,18 15,18 15,16 17,16 17,15 15,15z"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="16"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.CaptureImage">
        <Setter Property="Data" Value="M0,0L0,14 20,14 20,0 0,0z M1,1L19,1 19,13 1,13 1,1z M7,5L7,6 7,7 8,7 8,6 9,6 9,5 8,5 7,5z M10,5L10,6 11,6 11,5 10,5z M12,5L12,6 13,6 13,5 12,5z M14,5L14,6 15,6 15,5 14,5z M16,5L16,6 17,6 17,7 18,7 18,6 18,5 17,5 16,5z M12,7L12,10 13,10 13,9 14,9 14,8 13,8 13,7 12,7z M7,8L7,9 8,9 8,8 7,8z M17,8L17,9 18,9 18,8 17,8z M7,10L7,11 7,12 8,12 9,12 9,11 8,11 8,10 7,10z M17,10L17,11 16,11 16,12 18,12 18,10 17,10z M10,11L10,12 11,12 11,11 10,11z M12,11L12,12 13,12 13,11 12,11z M14,11L14,12 15,12 15,11 14,11z"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="14"/>
    </Style>
    
    <Style TargetType="{x:Type Path}" x:Key="SupportChat.Icon.CaptureImage">
        <Setter Property="Data" Value="M0,28L0,0 40,0 40,28 0,28z M39,1L1,1 1,27 39,27 39,1z M18,10L18,11 15,11 15,14 14,14 14,10 18,10z M15,18L14,18 14,16 15,16 15,18z M15,23L18,23 18,24 14,24 14,20 15,20 15,23z M22,11L20,11 20,10 22,10 22,11z M22,24L20,24 20,23 22,23 22,24z M26,11L24,11 24,10 26,10 26,11z M24,20L24,14 27,17z M26,24L24,24 24,23 26,23 26,24z M30,11L28,11 28,10 30,10 30,11z M30,24L28,24 28,23 30,23 30,24z M36,10L36,14 35,14 35,11 32,11 32,10 36,10z M35,20L36,20 36,24 32,24 32,23 35,23 35,20z M35,16L36,16 36,18 35,18 35,16z"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="21"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.NewFolder">
        <Setter Property="Data" Value="M16,10L16,1 3,1 3,19 12,19 15,19 17,19 17,10 16,10z M4,18L4,2 15,2 15,10 12,10 12,18 4,18z M16,18L15,18 13,18 13,11 16,11 16,18z"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.NewFolderInner">
        <Setter Property="Data" Value="M16,10L16,1 3,1 3,19 12,19 15,19 17,19 17,10 16,10z"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="18"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.Collection">
        <Setter Property="Data" Value="M18,4L18,2 16,2 16,0 0,0 0,13 2,13 2,15 4,15 4,17 20,17 20,4z M1,12L1,1 15,1 15,12 1,12z M3,14L3,13 16,13 16,3 17,3 17,14 3,14z M19,16L5,16 5,15 18,15 18,5 19,5z"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="17"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Icon.Minus">
        <Setter Property="Data" Value="M3,7L13,7 13,17 3,17z"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="2"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.OpenReport">
        <Setter Property="Data" Value="M12,1.5L3.5,1.5 3.5,18.5 10,18.5 10,17.5 4.5,17.5 4.5,2.5 11.5,2.5 11.5,6.5 15.5,6.5 15.5,13.5 16.5,13.5 16.5,4.8z M15.5,5.5L12.5,5.5 12.5,3.1 15.5,5.3z M12,11.5C10.349047,11.5 9,12.849047 9,14.5 9,16.150953 10.349047,17.5 12,17.5 12.524651,17.5 13.011339,17.352152 13.441406,17.113281L15.828125,19.5 16.535156,18.792969 14.228516,16.486328C14.702494,15.955417 15,15.263959 15,14.5 15,12.849047 13.650953,11.5 12,11.5z M12,12.496094C13.11241,12.496094 14.003906,13.38759 14.003906,14.5 14.003906,15.61241 13.11241,16.503906 12,16.503906 10.88759,16.503906 9.9960938,15.61241 9.9960938,14.5 9.9960938,13.38759 10.88759,12.496094 12,12.496094z"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="18"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Panel.Icon.SaveReport">
        <Setter Property="Data" Value="M12,1.5L3.5,1.5 3.5,18.5 9.5,18.5 9.5,17.5 4.5,17.5 4.5,2.5 11.5,2.5 11.5,6.5 15.5,6.5 15.5,13.5 16.5,13.5 16.5,4.8z M15.5,5.5L12.5,5.5 12.5,3.1 15.5,5.3z M13.507812,13.964844L12.800781,14.671875 12.810581,14.681675 10.699253,16.793003 11.40625,17.5 13,15.90625 13,18.5 10.5,18.5 10.5,19.5 16.5,19.5 16.5,18.5 14,18.5 14,15.871094 15.628906,17.5 16.335938,16.792969 14.224609,14.681641 14.236329,14.671841 13.529298,13.96481 13.517578,13.97461 13.507778,13.96481z"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="Height" Value="18"/>
    </Style>


    <Style TargetType="{x:Type Path}" x:Key="Icon.Plus">
        <Setter Property="Data" Value="M7,3L7,7 3,7 3,9 7,9 7,13 9,13 9,9 13,9 13,7 9,7 9,3 7,3z"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Height" Value="14"/>
    </Style>

    <Style TargetType="{x:Type Path}" x:Key="Icon.Tick.Open">
        <Setter Property="Data" Value="M1.4159061,0L0,1.415906 6,7.4159066 12,1.415906 10.584093,0 6,4.5840937 1.4159061,0z"/>
    </Style>

    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <!-- Main Menu Definitions -->


    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray.Form.InputBorders}" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="4,2" />
        <Setter Property="Margin" Value="0,7,0,21" />
        <Setter Property="Background" Value="{StaticResource White.Fill}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Style.Resources>
            <Style TargetType="{x:Type Paragraph}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0,4,0,0" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type ToggleButton}" x:Key="Menu.ToggleButton">
        <Setter Property="Foreground" Value="#FF767676"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="16,8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type ToggleButton}">

                    <Grid Width="25" Height="25" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                        <Rectangle x:Name="Rectangle"  Fill="Transparent" />
                        <Path x:Name="Icon" Width="19" Height="13" Stretch="Uniform" Style="{StaticResource Menu.ToggleButton.Icon}" Fill="{StaticResource Gray4.Fill}" RenderTransformOrigin="0.5,0.5" >
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleY="1" ScaleX="1"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource Gray5.Fill}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource Gray2.Fill}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource White.Fill}" />
                            <Setter TargetName="Rectangle" Property="Fill" Value="{StaticResource RearMenu.Bg.Active.Fill}" />
                            <Setter TargetName="Rectangle" Property="RadiusX" Value="2" />
                            <Setter TargetName="Rectangle" Property="RadiusY" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <!-- Interface Form Definitions -->

    <Style TargetType="{x:Type Grid}" x:Key="Form.Title">
        <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Height" Value="106"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Form.TextBlock">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{StaticResource Black.Fill}" />
    </Style>

    <Style TargetType="{x:Type Label}" x:Key="Form.Label">
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="{StaticResource Black.Fill}" />
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="Form.Label.Link">
        <Setter Property="Foreground" Value="{StaticResource FormLabel.Link.Color}"/>
        <Setter Property="TextDecorations" Value="Underline"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
    </Style>

    <!--<Style TargetType="{x:Type TextBox}" x:Key="Form.Input" BasedOn="{StaticResource TextBox.Error}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray.Form.InputBorders}"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="3,3,3,0" />
        <Setter Property="Margin" Value="0,7,0,21" />
        <Setter Property="Background" Value="{StaticResource White.Fill}"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        --><!-- lineheight 20px should be implemented, but requires to be calculated, so temporary it's not used --><!--
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Background" Value="{StaticResource Gray6.Fill}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style TargetType="{x:Type PasswordBox}" x:Key="Form.PasswordBox">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray.Form.InputBorders}"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="3,3,3,0" />
        <Setter Property="Margin" Value="0,7,0,21" />
        <Setter Property="Background" Value="{StaticResource White.Fill}"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Background" Value="{StaticResource Gray6.Fill}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="Form.Description" BasedOn="{StaticResource Form.Input}">
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Height" Value="121" />
    </Style>


    <!-- Combobox -->

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="Auto" Name="RightSide" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" Background="White" BorderBrush="{StaticResource Gray.Form.InputBorders}" BorderThickness="2" />
            <!--<Border Grid.Column="0" CornerRadius="0" Margin="1" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" />-->
            <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource Gray3.Fill}" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{StaticResource Icon.Tick.Open}" RenderTransformOrigin="0.5,0.5" Margin="7"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="#FF7eb4ea" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="#FF569de5" />
                <Setter TargetName="Arrow" Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="180"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray8.Fill}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#FFCCCCCC" />
                <Setter Property="Foreground" Value="#FFCCCCCC"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#FFCCCCCC" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}" x:Key="Form.Dropdown.Core">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray.Form.InputBorders}"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="0,7,0,21" />
        <Setter Property="Background" Value="{StaticResource White.Fill}"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!-- control template required to be designed to style toggleButton to have white background for Combobox https://msdn.microsoft.com/en-us/library/ms752094(v=vs.85).aspx -->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid SnapsToDevicePixels="True" Grid.IsSharedSizeScope="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="Auto" MinWidth="22" Name="RightSide" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.ColumnSpan="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                        <ContentPresenter Name="ContentSite" Grid.Column="0" IsHitTestVisible="False" Margin="6,2,0,2" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox" Grid.Column="0" Style="{x:Null}" Margin="6,2,0,2" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Focusable="True" Padding="{TemplateBinding Padding}" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide" VerticalOffset="-2">
                            <!--  -->
                            <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" OverridesDefaultStyle="True" Background="White" BorderThickness="2" BorderBrush="#FF569de5"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="64"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FF767676"/>
                            <Setter Property="Background" Value="{StaticResource Gray8.Fill}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="{x:Type ComboBox}"  x:Key="Form.Dropdown" BasedOn="{StaticResource Form.Dropdown.Core}">
        <Setter Property="Padding" Value="15,3,35,3" />
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>

    <!--<Style TargetType="{x:Type TextBlock}" x:Key="WrappingLabel" BasedOn="{StaticResource Form.TextBlock}">
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>-->

    <Style TargetType="{x:Type CheckBox}" x:Key="Form.CheckboxWrap" >
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource Black.Fill}" />
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Margin="{TemplateBinding Margin}" Height="{TemplateBinding Height}">
                        <Grid Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="Border" Grid.Column="0" BorderThickness="2" CornerRadius="0" BorderBrush="{StaticResource Gray.Form.InputBorders}" VerticalAlignment="Top" Background="White" Width="24" Height="24" Margin="0,4,0,0">
                                <Grid>
                                    <Path Opacity="0" Name="path" Data="M 0 5 L 3 10 10 0" Stroke="White" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Width="9" Height="9" Stretch="Fill"/>
                                    <Rectangle Name="threestate" Fill="White" Width="10" Height="10" Opacity="0"/>
                                </Grid>
                            </Border>

                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" Margin="5,5,0,0" >
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Form.TextBlock}">
                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=Foreground}"/>
                                        <Setter Property="TextWrapping" Value="Wrap"/>
                                        <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType=CheckBox}, Path=FontSize}"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                            
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="path" Property="Stroke" Value="{StaticResource White.Fill}" />
                            <Setter TargetName="path" Property="StrokeThickness" Value="2.5" />
                            <Setter TargetName="path" Property="Opacity" Value="1" />
                            <Setter TargetName="threestate" Property="Opacity" Value="0"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource State.Passed.Fill}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="path" Property="Opacity" Value="0" />
                            <Setter TargetName="threestate" Property="Opacity" Value="1"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource State.Passed.Fill}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray6.Fill}" />
                            <Setter TargetName="path" Property="Stroke" Value="Transparent" />
                            <Setter TargetName="threestate" Property="Fill" Value="Transparent"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray6.Fill}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}" />
                                <Setter TargetName="path" Property="Stroke" Value="Transparent" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray6.Fill}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}" />
                                <Setter TargetName="path" Property="Stroke" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="2" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}" x:Key="Form.Checkbox2" >
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="12,3,12,0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Border Margin="{TemplateBinding Margin}">
                        <Grid Width="Auto">
                            <Border Name="Border" BorderThickness="2" BorderBrush="{StaticResource Gray.Form.InputBorders}" Background="Transparent" Width="Auto">
                                <Label Name="Label" Content="{TemplateBinding Content}" Margin="8,2" VerticalAlignment="Center" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource State.Passed.Fill}" />
                            <Setter TargetName="Label" Property="Foreground" Value="{StaticResource White.Fill}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource Gray6.Fill}" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Form.Button.LinkButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="Underline">
                        <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{StaticResource FormLabel.Link.Color}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="Red" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="Form.Button.All">
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{StaticResource Gray.Form.ButtonBg}"/>
        <Setter Property="Foreground" Value="{StaticResource Black.Fill}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Padding" Value="10,0"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter x:Name="contentPresenter"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsDefault" Value="true">
                <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}" />
                <Setter Property="Foreground" Value="{StaticResource White.Fill}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#FFdbdbdb"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#FF000000"/>
                    <Setter Property="Foreground" Value="{StaticResource White.Fill}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDefault" Value="True"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#FF3798e6"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsDefault" Value="True"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="#FF005eab"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--<Style TargetType="Button" x:Key="Form.Button.All" BasedOn="{StaticResource Form.Button.Default}">

    <Style.Triggers>
      -->
    <!--<Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>-->
    <!--
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="#FFdbdbdb"></Setter>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="Background" Value="#FF000000"></Setter>
        <Setter Property="Foreground" Value="{StaticResource White.Fill}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Opacity" Value="0.25"></Setter>
      </Trigger>
    </Style.Triggers>

  </Style>-->

    <Style TargetType="ToggleButton" x:Key="Form.Button.All.Toggle">
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource Gray.Form.ButtonBg}" />
        <Setter Property="Foreground" Value="{StaticResource Black.Fill}" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ContentPresenter x:Name="contentPresenter"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFdbdbdb"></Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource White.Fill}"/>
                <Setter Property="Foreground" Value="{StaticResource StatusBar.Bg.Fill}" />
            </Trigger>
            <!--<Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}" />
                <Setter Property="Foreground" Value="{StaticResource White.Fill}" />
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Modal Window Definitions -->

    <Style x:Key="Window.Form" TargetType="Window">
        <!--<Setter Property="Height" Value="591" />-->
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="SizeToContent" Value="Width" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="MaxWidth" Value="818" />
        <!--<Setter Property="MinWidth" Value="409" />-->
        <Setter Property="MaxHeight" Value="600" />
        <!--<Setter Property="MinHeight" Value="500" />-->
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource StatusBar.Bg.Fill}"/>
    </Style>

    <Style x:Key="Window.Form.Scalable" TargetType="Window">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="CanResize" />
        <Setter Property="MinWidth" Value="800" />
        <Setter Property="MinHeight" Value="600" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="Padding" Value="0"/>

        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CaptionHeight="0"
                                CornerRadius="0"
                                GlassFrameThickness="0"
                                NonClientFrameEdges="None"
                                ResizeBorderThickness="3"
                                        />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Margin="7">
                        <Border   Background="{StaticResource White.Fill}"   BorderBrush="{StaticResource StatusBar.Bg.Fill}" BorderThickness="0" CornerRadius="0" ClipToBounds="True">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="0" Color="Red" ShadowDepth="0" Direction="180" Opacity="0"/>
                            </Border.Effect>
                        </Border>
                        <Border BorderBrush="{StaticResource StatusBar.Bg.Fill}" BorderThickness="1" CornerRadius="0" ClipToBounds="True"/>

                        <Grid Margin="0">
                            <!--<Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>-->
                            <!--<TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" 
                                              Foreground="{StaticResource DarkDark}"
                                              Grid.Row="0"
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Bottom"
                                              FontWeight="Bold"
                                              FontSize="16"
                                         />
                            <Button Name="CloseButton" 
                                    Width="20" Height="20"   
                                    Grid.Row="0"
                                    HorizontalAlignment="Right"
                                    BorderThickness="0"
                                    Margin="0,12,12,0"
                                    Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CloseCommand}"
                                    Style="{StaticResource CloseButton}"/>-->
                            <ContentPresenter Margin="0"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="Window.Shade" TargetType="Rectangle">
        <Setter Property="Fill" Value="{StaticResource Gray.Alpha40.Fill}" />
    </Style>

    <Style x:Key="Window.Title" TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource White.Fill}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
    </Style>

    <Style x:Key="Window.Bottom" TargetType="Grid">
        <Setter Property="Height" Value="107"/>
    </Style>

    <Style x:Key="Window.ButtonsHolder" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="40,0"/>
        <Setter Property="Height" Value="32"/>
    </Style>

    <Style x:Key="Window.TitleHolder" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="36,0"/>
        <Setter Property="Height" Value="44"/>
    </Style>

    <Style x:Key="Window.Button" TargetType="Button">
        <Setter Property="Width" Value="45"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="False"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Path Data="{TemplateBinding Property=Path.Data}" Width="{TemplateBinding Property=Path.Width}" Height="{TemplateBinding Property=Path.Height}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF096CBD"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#FF0765B2"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Window.ActionsHolder" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="2,0"/>
    </Style>

    <Style x:Key="Window.LeftPanel" TargetType="Grid">
        <Setter Property="Width" Value="409"/>
    </Style>

    <Style x:Key="Window.RightPanel" TargetType="Grid">
        <Setter Property="Width" Value="409"/>
        <Setter Property="Background" Value="{StaticResource Gray9.Fill}"/>
    </Style>

    <Style x:Key="Window.ContentHolder" TargetType="Grid">
        <Setter Property="MinWidth" Value="409"/>
        <Setter Property="MaxWidth" Value="817"/>
    </Style>

    <Style x:Key="Window.Panel" TargetType="StackPanel">
        <Setter Property="Margin" Value="38,49,38,0"/>
    </Style>

    <Style x:Key="Window.Button.Minimize" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Path Data="M15,12L30,12 30,27 15,27z" Width="11" Height="1" Fill="{StaticResource White.Fill}" Stretch="Fill" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="Window.Button.Maximize" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Path Data="M0,0L0,11 12,11 12,0 0,0z M11,10L1,10 1,1 11,1 11,10z" Width="12" Height="11" Fill="{StaticResource White.Fill}" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="Window.Button.Close" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Path Data="M11,0.7L10.3,0 5.5,4.8 0.7,0 0,0.7 4.8,5.5 0,10.3 0.7,11 5.5,6.2 10.3,11 11,10.3 6.2,5.5z" Width="11" Height="11" Fill="{StaticResource White.Fill}" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- UC Border Definitions -->

    <Style x:Key="Border.Title" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource Tab.Blue.Bg1.Fill}" />
        <Setter Property="Height" Value="52"/>
        <Setter Property="Margin" Value="0,0,-1,0"></Setter>
    </Style>

    <Style x:Key="Border.Label" TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource White.Fill}"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
        <Setter Property="Margin" Value="10,0" />
    </Style>

    <!-- UC Panels Definitions -->

    <Style x:Key="Panel.Title" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource White.Fill}"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
        <Setter Property="Margin" Value="20,0" />
        <Setter Property="Padding" Value="0,5" />
    </Style>

    <Style x:Key="Panel.Bg1" TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource Tab.Blue.Bg1.Fill}" />
        <Setter Property="Height" Value="52"/>
    </Style>

    <Style x:Key="Panel.Button.Close" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Foreground" Value="{StaticResource White.Fill}"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Path x:Name="Path" Data="M11,0.7L10.3,0 5.5,4.8 0.7,0 0,0.7 4.8,5.5 0,10.3 0.7,11 5.5,6.2 10.3,11 11,10.3 6.2,5.5z" Width="15" Height="15" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.75"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.55"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Panel.Button.Back.Small" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Foreground" Value="White"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="{TemplateBinding Background}">
                        <Path x:Name="Icon" Style="{StaticResource Panel.Icon.Back.Small}" Width="24" Height="24" Fill="{TemplateBinding Foreground}" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <TransformGroup>
                            <RotateTransform Angle="180"/>
                        </TransformGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.75"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.55"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Panel.Button" TargetType="Button">
        <!-- Based upon this topic: http://www.hardcodet.net/2009/01/create-wpf-image-button-through-attached-properties -->
        <Setter Property="Width" Value="67"/>
        <Setter Property="Height" Value="59"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="1,1,0,1" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="22"/>
                        </Grid.RowDefinitions>
                        <Path Fill="{TemplateBinding Foreground}" Style="{Binding Path=(common:PathButton.PathStyle), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Stretch="Fill"/>
                        <!--<ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1"/>-->
                        <AccessText Grid.Row="2" Text="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Top"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FF025ba0"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="#FF0765B2"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Panel.ToggleButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="67"/>
        <Setter Property="Height" Value="59"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Margin" Value="1,1,0,1" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="22"/>
                        </Grid.RowDefinitions>
                        <Path Fill="{TemplateBinding Foreground}" Style="{Binding Path=(common:PathButton.PathStyle), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Stretch="Fill" Grid.Row="0" Margin="0,0,0,4"/>
                        <!--<ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1"/>-->
                        <AccessText Text="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ToggleButton}}}" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FF025ba0"></Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="#FF0765B2"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Panel.SubMenuPanel" TargetType="StackPanel">
        <Setter Property="Background" Value="{StaticResource Gray11.Fill}"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Margin" Value="0,1,0,0"/>
        <Style.Resources>
            <Style TargetType="Button" BasedOn="{StaticResource Panel.Button}">
                <Setter Property="Height" Value="60"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid Background="{TemplateBinding Background}" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Path Fill="{TemplateBinding Foreground}" Style="{Binding Path=(common:PathButton.PathStyle), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Fill" Grid.Column="0"/>
                                <!--<ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1"/>-->
                                <AccessText Text="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>

    <!-- Menu Add Building Block Definitions -->


    <!-- Building Blocks Designs -->

    <Style x:Key="BuildingBlock.ExpanderStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="/LeapTest.AutomationStudio.Assets;component/Fonts/#Roboto Condensed"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Background" Value="{StaticResource Gray6.Fill}"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="CommonBG"  Background="{TemplateBinding Background}">
                        <Grid Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="Label" FontSize="11" Foreground="{StaticResource Gray.BuildingBlock.Items}" Padding="0,0,4,0" Text="Expand" />
                            <Path x:Name="Icon" Grid.Column="1" Fill="{StaticResource Gray.BuildingBlock.Items}" Width="9" Height="5"
                    Data="M0,0L7,0 3.5,5z" Stretch="Fill" RenderTransformOrigin="0.5,0.5"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Label" Property="Text" Value="Collapse"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="CommonBG" Property="Background" Value="{StaticResource Gray.BuildingBlock.Items}"/>
                            <Setter TargetName="Label" Property="Foreground" Value="White"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button style -->
    
    <!-- probably it would be better to replace these 2 buttons with one togglebutton -->
    <Style x:Key="BuildingBlock.ExpanderPlusStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Content" Value=""/>
        <Setter Property="BorderBrush" Value="{StaticResource Gray.Form.InputBorders}" />
        <Setter Property="Background" Value="{StaticResource Gray6.Fill}" />
        <Setter Property="Foreground" Value="{StaticResource Gray3.Fill}" />

        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="CommonBG" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <Border Width="24">
                                <Path x:Name="Icon" Width="16" Height="16" Style="{StaticResource Icon.Plus}" Fill="{TemplateBinding Foreground}"/>
                            </Border>
                            <TextBlock x:Name="Text" Text="{TemplateBinding Content}" Style="{StaticResource BuildingBlocks.PropertyLabel}" Margin="0,0,8,0" />
                        </StackPanel>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="CommonBG" Property="Background" Value="{StaticResource Gray.BuildingBlock.Items}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                            <Setter TargetName="Text" Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BuildingBlock.ExpanderCloseStyle" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="CommonBG" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{StaticResource Gray6.Fill}" HorizontalAlignment="Center" VerticalAlignment="Center" BorderBrush="{StaticResource Gray.BuildingBlock.Items}" BorderThickness="2" CornerRadius="0">
                        <Path x:Name="Icon" Width="16" Height="16" Style="{StaticResource Icon.Plus}" Fill="{StaticResource Gray3.Fill}" RenderTransformOrigin="0.5,0.5" >
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="45"/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="CommonBG" Property="Background" Value="{StaticResource Gray.BuildingBlock.Items}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                            <Setter TargetName="CommonBG" Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CloseButton" TargetType="Button">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Margin" Value="0"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Path x:Name="Icon" Width="16" Height="16" Style="{StaticResource Icon.Plus}" Fill="{StaticResource State.Failed.Fill}" RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <TransformGroup>
                                <RotateTransform Angle="45"/>
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Icon" Property="Fill" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BuildingBlock.ExpanderPlusMinusStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Width" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Name="CommonBG" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{StaticResource Gray6.Fill}" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Path x:Name="Icon" Fill="{StaticResource Gray.BuildingBlock.Items}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="CommonBG" Property="Background" Value="{StaticResource Gray.BuildingBlock.Items}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource Icon.Plus}"/>
                            <Setter TargetName="Icon" Property="Width" Value="16"/>
                            <Setter TargetName="Icon" Property="Height" Value="16"/>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource Icon.Minus}"/>
                            <Setter TargetName="Icon" Property="Width" Value="12"/>
                            <Setter TargetName="Icon" Property="Height" Value="2"/>
                            <Setter TargetName="Icon" Property="Stretch" Value="Fill"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BuildingBlock.ExpanderTickStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="CommonBG" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="2">
                        <Path x:Name="Icon" Fill="{StaticResource Gray3.Fill}" Width="10" Height="6.5" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" Margin="0,1,0,0" SnapsToDevicePixels="True"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Setter TargetName="CommonBG" Property="Background" Value="{StaticResource Gray.BuildingBlock.Items}"/>
                            <Setter TargetName="Icon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource Icon.Tick.Open}"/>

                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource Icon.Tick.Open}"/>
                            <Setter TargetName="Icon" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <RotateTransform Angle="180"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter Property="Cursor" Value="Hand"/>-->
                            <Setter TargetName="Icon" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Building Blocks inner elements styles -->

    <Style x:Key="BuildingBlock.Grid" TargetType="Grid">
        <Setter Property="Margin" Value="10,7"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="BuildingBlocks.TextBox" TargetType="TextBox">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Items}" />
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MaxWidth" Value="320"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Background" Value="{StaticResource Gray8.Fill}"/>
                <Setter Property="Text" Value="Value form input"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BuildingBlock.TextBox.Watermark.Base" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource Gray.BuildingBlock.Items}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="6"/>
    </Style>

    <Style x:Key="BuildingBlock.TextBox.Watermark" TargetType="TextBlock" BasedOn="{StaticResource BuildingBlock.TextBox.Watermark.Base}">
        <Setter Property="Visibility" Value="{Binding ElementName=WatermarkedTextBox, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <!--<Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>-->
                <Setter Property="Foreground" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Background" Value="{StaticResource Gray8.Fill}"/>
                <Setter Property="Text" Value="Value form input"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BuildingBlock.WatermarkTextBox" TargetType="xctk:WatermarkTextBox">
        <!--<Setter Property="Visibility" Value="{Binding ElementName=WatermarkedTextBox, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Items}" />
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Background" Value="{StaticResource White.Fill}"/>
        <!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="MaxWidth" Value="320"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <!--<Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>-->
                        <AdornedElementPlaceholder x:Name="placeholder" />
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,2,0,0">
                            <!--<Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E" StrokeThickness="2" />-->
                            <Border Background="{StaticResource State.Failed.Fill}" CornerRadius="1" Padding="4">
                                <TextBlock HorizontalAlignment="Center" Foreground="White" Margin="0" Text="{Binding [0].ErrorContent}" />
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>

            <DataTrigger Binding="{Binding IsEditable}" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource Gray.BuildingBlock.Items}"/>
                <Setter Property="Background" Value="{StaticResource Gray8.Fill}"/>
                <Setter Property="WatermarkTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl x:Name="ContentControl" Content="{Binding}" Focusable="False" />
                            <DataTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ContentControl" Property="Content" Value="Value from input"/>
                                </Trigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Input.Disabled}"/>
                <Setter Property="Foreground" Value="{StaticResource Gray.BuildingBlock.Items}"/>
                <Setter Property="Background" Value="{StaticResource Gray8.Fill}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BuildingBlock.WatermarkTextBox.EditableTitle" TargetType="xctk:WatermarkTextBox" BasedOn="{StaticResource BuildingBlock.WatermarkTextBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource Gray2.Fill}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="MaxWidth" Value="80"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsEditable}" Value="False">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource Gray2.Fill}"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource Gray2.Fill}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{StaticResource BuildingBlock.Link.Color}"/>
                <Setter Property="Cursor" Value="IBeam"/>
                <Setter Property="TextDecorations">
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration PenThicknessUnit="FontRecommended"  >
                                <TextDecoration.Pen>
                                    <Pen Thickness="1" Brush="{StaticResource BuildingBlock.Link.Color}">
                                        <Pen.DashStyle>
                                            <DashStyle Dashes="2" />
                                        </Pen.DashStyle>
                                    </Pen>
                                </TextDecoration.Pen>
                            </TextDecoration>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Padding" Value="4,2"/>
                <Setter Property="Foreground" Value="{StaticResource Gray2.Fill}"/>
                <Setter Property="TextDecorations" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BuildingBlocks.Image.Border" TargetType="Button">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{StaticResource Gray.BuildingBlock.Items}" />
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
    </Style>

    <Style TargetType="Label" x:Key="BuildingBlocks.PropertyLabel.Details.Link">
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource FormLabel.Link.Color}"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
    </Style>

    <!-- sort list view -->

    <!-- List View styles -->

    <Style x:Key="GridViewColumnHeaderStyle" TargetType="GridViewColumnHeader">
        <Setter Property="Background" Value="{StaticResource White.Fill}"/>
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border Padding="20,20,0,7" Margin="0" BorderBrush="{StaticResource Gray8.Fill}" BorderThickness="0,0,0,2">
                        <ContentPresenter x:Name="HeaderContent"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}" x:Key="ListViewItemStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">

                    <ControlTemplate.Resources>

                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="Padding" Value="16,0,0,0"/>
                            <Setter Property="Foreground" Value="{StaticResource Black.Fill}" />
                            <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}, Path=IsSelected}" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource White.Fill}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                    </ControlTemplate.Resources>

                    <Border x:Name="Border" Margin="0,-1,0,0" Height="40" BorderThickness="0,0,0,1" BorderBrush="{StaticResource Gray11.Fill}">
                        <Grid>
                            <!-- Fix width if column lengths cahnges -->
                            <Border x:Name="RightBG" Background="{TemplateBinding Background}" Width="630" HorizontalAlignment="Right" BorderBrush="{StaticResource Gray8.Fill}" BorderThickness="1,0,0,0"/>
                            <GridViewRowPresenter VerticalAlignment="Center"/>
                            <Rectangle x:Name="ItemBackground" Fill="Transparent"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray4.Fill}" />
                            <Setter TargetName="RightBG" Property="Background" Value="{StaticResource Gray4.Fill}" />
                            <Setter TargetName="RightBG" Property="BorderBrush" Value="{StaticResource Gray4.Fill}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource Gray.Form.InputBorders}" />
                            <Setter TargetName="RightBG" Property="Background" Value="{StaticResource Gray.Form.InputBorders}" />
                        </MultiTrigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="#fffbfbfb"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#fff7f7f7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--<Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="{StaticResource Gray10.Fill}"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="pink"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Orange" />
            </Trigger>
        </Style.Triggers>-->
    </Style>

    <!-- Test Editor controls-->

    <Style x:Key="PlayPanel.Button.CaseUndo" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" Padding="15,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Path Style="{StaticResource TestEditor.Icon.Undo}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" HorizontalAlignment="Left"/>
                            <TextBlock Margin="3,0,0,0" Foreground="{TemplateBinding Foreground}" Grid.Column="1" VerticalAlignment="Center">Undo</TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.75"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPanel.Button.CaseRedo" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" Padding="15,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Path Style="{StaticResource TestEditor.Icon.Redo}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" HorizontalAlignment="Left"/>
                            <TextBlock Margin="3,0,0,0" Foreground="{TemplateBinding Foreground}" Grid.Column="1" VerticalAlignment="Center">Redo</TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.75"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPanel.Button.CaseSettings" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" Padding="15,5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Path Style="{StaticResource TestEditor.Icon.TestSettings}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" HorizontalAlignment="Left"/>
                            <TextBlock Margin="3,0,0,0" Foreground="{TemplateBinding Foreground}" Grid.Column="1" VerticalAlignment="Center">Settings</TextBlock>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.75"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPanel.Button.SaveCase" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" Padding="15,5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Path Style="{StaticResource TestEditor.Icon.SaveTest}" Fill="{TemplateBinding Foreground}" Stretch="UniformToFill" SnapsToDevicePixels="True" HorizontalAlignment="Left"/>
                        <TextBlock Margin="3,0,0,0" Foreground="{TemplateBinding Foreground}" Grid.Column="1" VerticalAlignment="Center">Save</TextBlock>
                    </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="White" Opacity="0.75"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPanel.Button.Close" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Path Data="M11,0.7L10.3,0 5.5,4.8 0.7,0 0,0.7 4.8,5.5 0,10.3 0.7,11 5.5,6.2 10.3,11 11,10.3 6.2,5.5z" Width="8" Height="8" Fill="{StaticResource Gray0.Fill}" Stretch="Fill"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Gray10.Fill}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <!--<Setter Property="Focusable" Value="false" />-->
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent"  BorderThickness="0" Height="11"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PlayPanel.Slider.SliderThumb" TargetType="Thumb">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{StaticResource StatusBar.Bg.Fill}" Width="5" Height="11" BorderThickness="1" BorderBrush="White"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- based upon: http://stackoverflow.com/questions/24508167/track-bar-slider-template-for-wpf -->
    <Style x:Key="PlayPanel.Slider.Scale" TargetType="Slider">
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TickBar  x:Name="TopTick"  Fill="White" VerticalAlignment="Top" Grid.Row="0" Placement="Top" Height="5" Visibility="Collapsed"/>
                        <!--<Border BorderBrush="LightGray"  BorderThickness="0,0,0,1" Visibility="Collapsed" />-->
                        <Border x:Name="TrackBackground" VerticalAlignment="Center" Margin="0" BorderBrush="Transparent" Background="#FF033c6a" Height="11" Grid.Row="1"  BorderThickness="0,5"/>
                        <Track Grid.Row="1" x:Name="PART_Track" Margin="0" >
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource PlayPanel.Slider.SliderThumb}"/>
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                        <!--<TextBlock Text="0" Grid.Row="1" Margin="0" Visibility="Collapsed"/>-->
                        <TickBar x:Name="BottomTick" Fill="White"  Grid.Row="2"   Placement="Bottom" Height="4" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement"  Value="TopLeft">
                            <Setter TargetName="TopTick" Property="Visibility"  Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter TargetName="BottomTick"  Property="Visibility"  Value="Visible" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                            <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Play Panel controls -->
    <!--<Style x:Key="PlayPanel.Button.SwitchToDebug" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Foreground" Value="{StaticResource Black.Fill}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Path Style="{StaticResource PlayPanel.Icon.HideBar}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" HorizontalAlignment="Left"/>
                        <TextBlock Foreground="{TemplateBinding Foreground}" Grid.Column="1" VerticalAlignment="Center">Switch to edit mode</TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource Black.Fill}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <Style x:Key="PlayPanel.Button.PlayStop" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="Auto" Height="Auto" Background="{TemplateBinding Background}">
                        <Path x:Name="Icon" Style="{x:Null}" Stretch="Uniform" Fill="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource PlayPanel.Icon.Play}"/>
                            <Setter TargetName="Icon" Property="Margin" Value="6,0,0,0"/>
                            <Setter Property="ToolTip" Value="Play case run"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource Panel.Icon.Stop}"/>
                            <Setter Property="ToolTip" Value="Stop case run (F10)"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Tab.Blue.Bg2.Fill}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPanel.Button.ShowMeta" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="Auto" Height="Auto" Background="{TemplateBinding Background}">
                        <Path x:Name="Icon" Style="{x:Null}" Stretch="Uniform" Fill="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource PlayPanel.Icon.Metadata}"/>
                            <Setter Property="ToolTip" Value="Show meta-data shapes"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Style" Value="{StaticResource PlayPanel.Icon.Metadata}"/>
                            <Setter Property="ToolTip" Value="Hide meta-data shapes"/>
                            <Setter Property="Background" Value="#FF477092"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Tab.Blue.Bg2.Fill}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPanel.Button.SwitchToEdit" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Background" Value="#FFee7a05"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="Auto" Height="Auto" Background="{TemplateBinding Background}">
                        <Path Style="{StaticResource PlayPanel.Icon.SwitchToEdit}" Stretch="Uniform" Fill="{TemplateBinding Foreground}" Margin="0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFd46c04"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PlayPanel.Button.Play" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="ToolTip" Value="Run case"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="Auto" Height="Auto" Background="{TemplateBinding Background}">
                        <Path Style="{StaticResource Panel.Icon.Run}" Stretch="Uniform" Fill="{TemplateBinding Foreground}" Margin="0,0,-5,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Tab.Blue.Bg2.Fill}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="PlayPanel.Button.ReRun" TargetType="Button" BasedOn="{StaticResource Window.Button}">
        <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ToolTip" Value="Restart case"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="Auto" Height="Auto" Background="{TemplateBinding Background}">
                        <Path Style="{StaticResource PlayPanel.Icon.ReRun}" Stretch="Uniform" Fill="{TemplateBinding Foreground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Tab.Blue.Bg2.Fill}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#3fffffff" />
                <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}"/>
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Following items are required to be edited for better and consistent UI -->

    <Style x:Key="PlayPanel.Slider" TargetType="{x:Type Slider}">
        <Setter Property="IsMoveToPointEnabled" Value="True"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="TickFrequency" Value="1"/>
        <Setter Property="TickPlacement" Value="TopLeft"/>
        <Setter Property="LargeChange" Value="10"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Interval" Value="10"/>
        <Setter Property="Foreground" Value="#FF819db5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="#ff033c6a">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="41"/>
                                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                <RowDefinition Height="17"/>
                            </Grid.RowDefinitions>
                            <!-- Preview should be placed in first row -->

                            <TickBar x:Name="TopTick" Visibility="Hidden" Fill="{TemplateBinding Foreground}" Placement="{TemplateBinding TickPlacement}" VerticalAlignment="Bottom" Height="8" Grid.Row="0" Margin="0"/>
                            <!-- check out for tick numbers: http://stackoverflow.com/questions/4289322/wpf-silverlight-slider-control-display-tick-numbers -->
                            <TickBar x:Name="BottomTick" Visibility="Visible" Fill="{TemplateBinding Foreground}" Placement="{TemplateBinding TickPlacement}" VerticalAlignment="Bottom" Height="8" Grid.Row="1"/>

                            <Border x:Name="TrackBackground" BorderThickness="0" CornerRadius="0" Margin="0" VerticalAlignment="Center" Height="17" Grid.Row="1" Background="Transparent" >
                                <Canvas Margin="0">
                                    <Rectangle Visibility="Hidden" x:Name="PART_SelectionRange" Height="8" Fill="{StaticResource StatusBar.Bg.Fill}" StrokeThickness="0"/>
                                </Canvas>
                            </Border>

                            <Track x:Name="PART_Track" Grid.Row="1" VerticalAlignment="Stretch" Height="Auto">
                                <Track.Resources>
                                    <Style TargetType="RepeatButton">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource StatusBar.Bg.Fill}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Track.Resources>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="{x:Static Slider.DecreaseLarge}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="White" Width="5" BorderBrush="Transparent" BorderThickness="1,0" Height="58" Margin="-1,-41,-1,0"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="{x:Static Slider.IncreaseLarge}"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenu Style -->
    <!-- based on: https://msdn.microsoft.com/en-us/library/ms747082(v=vs.85).aspx -->

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="FontSize" Value="12"/>
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource NewFocusVisualStyle.Button}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">

                    <ControlTemplate.Resources>

                        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
                            <Setter Property="Height" Value="1"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Separator}">
                                        <Border BorderBrush="{StaticResource Gray9.Fill}" BorderThickness="1"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
                            <Border Name="Border" Height="35" Background="Transparent">
                                <Grid VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut_1" />
                                        <ColumnDefinition Width="13" />
                                    </Grid.ColumnDefinitions>
                                    <Border Name="IconBorder" BorderBrush="{StaticResource Gray9.Fill}" BorderThickness="0" Width="12" Height="12" Margin="10,0,0,0" >
                                        <!--  BorderThickness="1" Width="24" Height="24"  -->
                                        <!--<ContentPresenter Name="Icon" VerticalAlignment="Center" ContentSource="Icon" />-->
                                    </Border>
                                    <Border Name="Check" Width="12" Height="12" Visibility="Hidden" Margin="10,0,0,0" Background="Transparent" BorderThickness="0" BorderBrush="{StaticResource Gray6.Fill}" >
                                        <!--  BorderThickness="1" Width="24" Height="24"  -->
                                        <Path Name="CheckMark" Width="8" Height="8" Visibility="Collapsed" Fill="#5082a4" Stroke="#5082a4" StrokeThickness="1" Data="M0,4L3,7 8,2 7.5,1.5 3,6 0.5,3.5z" />
                                    </Border>
                                    <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="12,0,0,0" />
                                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center" Margin="5,2,0,2" DockPanel.Dock="Right" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <!--<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />-->
                                    <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsCheckable" Value="true">
                                    <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsCheckable" Value="False">
                                    <Setter TargetName="Check" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource Gray6.Fill}" />
                                    <Setter TargetName="HeaderHost" Property="TextElement.Foreground" Value="{StaticResource Gray6.Fill}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource Gray1.Fill}" />
                                    <Setter TargetName="HeaderHost" Property="TextElement.Foreground" Value="{StaticResource Gray1.Fill}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Tab.Blue.Bg4.Fill}" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#FF60A6E3" />
                                    <Setter Property="Foreground" Value="{StaticResource White.Fill}" />
                                    <Setter TargetName="HeaderHost" Property="TextElement.Foreground" Value="{StaticResource White.Fill}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                        <!-- SubmenuHeader -->

                        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">

                            <Border Name="Border" Height="35" Background="Transparent">
                                <Grid VerticalAlignment="Stretch">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                                        <ColumnDefinition Width="13" />
                                    </Grid.ColumnDefinitions>
                                    <Border Name="IconBorder" BorderBrush="{StaticResource Gray9.Fill}" BorderThickness="0" Width="12" Height="12" Margin="10,0,0,0" >
                                        <!--  BorderThickness="1" Width="24" Height="24"  -->
                                        <!--<ContentPresenter Name="Icon" VerticalAlignment="Center" ContentSource="Icon" />-->
                                    </Border>
                                    <Border Name="Check" Width="12" Height="12" Visibility="Hidden" Margin="10,0,0,0" Background="Transparent" BorderThickness="0" BorderBrush="{StaticResource Gray6.Fill}" >
                                        <!--  BorderThickness="1" Width="24" Height="24"  -->
                                        <Path Name="CheckMark" Width="8" Height="8" Visibility="Collapsed" Stroke="#5082a4" StrokeThickness="2" Data="M0,4L3,7 8,2 7.5,1.5 3,6 0.5,3.5z" />
                                    </Border>
                                    <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="12,0,0,0"/>
                                    <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center" Margin="5,2,0,2" DockPanel.Dock="Right" />
                                    <Path Name="Expandable"  Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="#0f3c5a" />
                                    <Popup Name="Popup" Placement="Right" HorizontalOffset="0" VerticalOffset="-1" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True"  PopupAnimation="Fade">
                                        <Border Name="SubmenuBorder" Background="{StaticResource White.Fill}" BorderBrush="{StaticResource Gray5.Fill}" BorderThickness="1">
                                            <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Auto">
                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <!--<Setter TargetName="Icon" Property="Visibility" Value="Hidden" />-->
                                    <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsCheckable" Value="true">
                                    <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsCheckable" Value="False">
                                    <Setter TargetName="Check" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="IconBorder" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource Gray6.Fill}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource Gray1.Fill}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource Tab.Blue.Bg4.Fill}" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#FF60A6E3" />
                                    <Setter Property="Foreground" Value="{StaticResource White.Fill}" />
                                    <Setter TargetName="Expandable" Property="Fill" Value="{StaticResource White.Fill}" />
                                </Trigger>
                                <!--<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                                    <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0" />
                                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0" />
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </ControlTemplate.Resources>

                    <Border x:Name="Border" Background="{StaticResource White.Fill}" BorderThickness="1" BorderBrush="{StaticResource Gray5.Fill}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Control" x:Key="ResetFocusVisualStyle" >
        <Setter Property="Control.Template" Value="{x:Null}"/>
    </Style>

    <Style x:Key="NewFocusVisualStyle.Menu" TargetType="Control">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="0,0,0,5" BorderThickness="0,0,0,2" BorderBrush="{StaticResource Tab.Blue.Bg4.Fill}">
                        <Rectangle Margin="0" Fill="{StaticResource Tab.Blue.Bg4.Fill}" Opacity="0.25"/>
                    </Border>
                </ControlTemplate>
                <!--<ControlTemplate TargetType="{x:Type Control}">
                    <Border Margin="0,0,0,5" MinHeight="55" Background="{StaticResource Tab.Blue.Bg1.Fill}">
                        <StackPanel Orientation="Horizontal" Background="Transparent" >
                            <Path Margin="25,0,15,0" Width="25" Height="25" Fill="{StaticResource White.Fill}" Style="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Path},Path=Style, Mode=OneWay}" Stretch="Uniform" VerticalAlignment="Center"/>
                            <Label Padding="0" Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=Label},Path=Content, Mode=OneWay}" Visibility="Visible" VerticalContentAlignment="Center" Foreground="{StaticResource RearMenu.Foreground.Fill}" FontFamily="Segoe UI Semilight" FontSize="18" />
                        </StackPanel>
                    </Border>
                </ControlTemplate>-->
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NewFocusVisualStyle.Button" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="0" BorderThickness="1" BorderBrush="{StaticResource Tab.Blue.Bg4.Fill}" CornerRadius="2" Opacity="0.5">
                        <Rectangle  Fill="{StaticResource Tab.Blue.Bg4.Fill}" Opacity="0.5"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="Border" x:Key="MouseDragBorder.Horizontal">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="Transparent" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="0.332"/>
                    <GradientStop Color="Transparent" Offset="0.333"/>
                    <GradientStop Color="Transparent" Offset="0.665"/>
                    <GradientStop Color="Transparent" Offset="0.666"/>
                    <GradientStop Color="Transparent" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="15"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Border.DragEnter">
                <BeginStoryboard x:Name="DragHoverStoryboard">
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[2].Color" Duration="0:0:0.1" To="#FFC3C3C3" />
                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[3].Color" Duration="0:0:0.1" To="#FFC3C3C3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.DragLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[2].Color" Duration="0:0:0" To="Transparent" />
                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[3].Color" Duration="0:0:0" To="Transparent" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.Drop">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[2].Color" Duration="0:0:0" To="Transparent" />
                        <ColorAnimation Storyboard.TargetProperty="Background.GradientStops[3].Color" Duration="0:0:0" To="Transparent" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Border" x:Key="MouseDragBorder.Vertical">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                    <GradientStop Color="Transparent" Offset="0"/>
                    <GradientStop Color="Transparent" Offset="0.332"/>
                    <GradientStop Color="Transparent" Offset="0.333"/>
                    <GradientStop Color="Transparent" Offset="0.665"/>
                    <GradientStop Color="Transparent" Offset="0.666"/>
                    <GradientStop Color="Transparent" Offset="1.0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="MouseDragBorder.Top" BasedOn="{StaticResource MouseDragBorder.Horizontal}">
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Tag" Value="Top"/>
        <Setter Property="Margin" Value="0,-8,0,0"/>
    </Style>

    <Style TargetType="Border" x:Key="MouseDragBorder.Bottom" BasedOn="{StaticResource MouseDragBorder.Horizontal}">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Tag" Value="Bottom"/>
        <Setter Property="Margin" Value="0,0,0,-7"/>
    </Style>

    <Style TargetType="Border" x:Key="MouseDragBorder.Left" BasedOn="{StaticResource MouseDragBorder.Vertical}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Tag" Value="Left"/>
        <Setter Property="Margin" Value="0,-7,0,0"/>
    </Style>

    <Style TargetType="Border" x:Key="MouseDragBorder.Right" BasedOn="{StaticResource MouseDragBorder.Vertical}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Tag" Value="Right"/>
        <Setter Property="Margin" Value="0,0,0,-7"/>
    </Style>

    <Style TargetType="Border" x:Key="MouseDragInside">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Border.DragEnter">
                <BeginStoryboard x:Name="DragHoverStoryboard">
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0" To="#ffb3b3b3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.DragLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0" To="Transparent" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.Drop">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="0:0:0" To="Transparent" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource StatusBar.Bg.Fill}"/>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="NoScrollTemplate">
        <Grid 
                    Background="{TemplateBinding Background}" 
                    Margin="0">
            <ItemsPresenter />
        </Grid>
    </ControlTemplate>


    <ControlTemplate x:Key="Validation.ErrorTemplate">
        <StackPanel>
            <!--<Border BorderBrush="#FFCB2E2E" BorderThickness="1" Background="#11FF0000" IsHitTestVisible="False" x:Name="errorBorder"/>-->
            <AdornedElementPlaceholder x:Name="placeholder"  />
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" >
                <!--<Polygon  VerticalAlignment="Center" Points="0,4 4,0 4,8" Fill="#FFCB2E2E" Stretch="Fill" Stroke="#FFCB2E2E" StrokeThickness="2" />-->
                <Border Background="{StaticResource State.Failed.Fill}" CornerRadius="1" Padding="4">
                    <TextBlock HorizontalAlignment="Center" Foreground="White" FontWeight="Bold" Text="{Binding [0].ErrorContent}" />
                </Border>
            </StackPanel>
        </StackPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type TextBox}" x:Key="TextBox.Error">
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource Validation.ErrorTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTipService.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="ToolTipService.Placement" Value="Bottom"/>
        <Setter Property="ToolTipService.BetweenShowDelay" Value="100"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="100"/>
        <Setter Property="VerticalOffset" Value="8"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter Content="{TemplateBinding Content}"  >
                        <ContentPresenter.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="MaxWidth" Value="300"/>
                                <Setter Property="TextWrapping" Value="Wrap" />
                            </Style>
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Content" Value="{x:Static sys:String.Empty}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Storyboard x:Key="BlinkAnimation" RepeatBehavior="Forever" BeginTime="0:0:2">
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:1" To="0.5" Storyboard.TargetProperty="Opacity"/>-->
        <ColorAnimation To="#80CDE8FF" BeginTime="0:0:0" Duration="0:0:0.3" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
        <ColorAnimation From="#80CDE8FF" BeginTime="0:0:0.5" Duration="0:0:0.7" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
    </Storyboard>

    <Storyboard x:Key="BlinkAnimation.Dark" RepeatBehavior="Forever" BeginTime="0:0:2">
        <!--<DoubleAnimation BeginTime="0:0:0" Duration="0:0:1" To="0.5" Storyboard.TargetProperty="Opacity"/>-->
        <ColorAnimation To="#FF2992e6" BeginTime="0:0:0" Duration="0:0:0.3" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
        <ColorAnimation From="#FF2992e6" BeginTime="0:0:0.5" Duration="0:0:0.7" Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)"/>
    </Storyboard>
</ResourceDictionary>

